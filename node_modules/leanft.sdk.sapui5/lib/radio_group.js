// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/31/2015.
 */

var Core = require("leanft.sdk.core");
var Web = require("leanft.sdk.web").Behaviors;
var SAPUI5BaseDesc = require("./sapui5_base.js").SAPUI5BaseDesc;
var SAPUI5BaseTestObject = require("./sapui5_base.js").SAPUI5BaseTestObject;
var HelperBehaviors = require("./helper_behaviors.js");

var SapUI5HelperFuncs = HelperBehaviors.HelperFuncs;
var WebHelperFuncs = Web.HelperFuncs;

var StringUtils = Core.StringUtils;

/**
 * Common methods for the RadioGroup description
 * @ignore
 * @memberof SAPUI5
 */
var RadioGroupDescriptionBehavior = {
    /**
     * The list of all items contained in this object.
     * @param {string[]} items The list of all items contained in this object.
     * @returns {string[] | Description} If no parameter is provided, the method acts as a getter and returns the current stored array of all items contained in this object;
     * otherwise it returns 'this' for use with the builder pattern.
     */
    items: function(items){
        return this._propertyHandler("all items", items, StringUtils.joinFunc(";"), StringUtils.splitFunc(";"));
    }
};

/**
 * The description of an SAPUI5 RadioGroup test object.
 * @param {Object} [props] Initializes a RadioGroup test object using the supplied property bag.
 * @returns {RadioGroup} the description object that was initialized.
 * @constructor
 * @memberof SAPUI5
 * @extends SAPUI5.SAPUI5BaseDesc
 * @mixes SAPUI5.EnabledDescriptionBehavior
 * @mixes SAPUI5.RadioGroupDescriptionBehavior
 */
function RadioGroup(props) {
    var radioGroupDes = new SAPUI5BaseDesc("RadioGroup");

    Core.ObjectUtils.extend(radioGroupDes, HelperBehaviors.EnabledDescriptionBehavior);
    Core.ObjectUtils.extend(radioGroupDes, RadioGroupDescriptionBehavior);

    radioGroupDes._defineByPropertyBag(props);

    return radioGroupDes;
}

/**
 * An SAPUI5 RadioGroup.
 * @constructor
 * @memberof SAPUI5
 * @class RadioGroupTO
 * @extends SAPUI5.SAPUI5BaseTestObject
 * @mixes SAPUI5.EnabledTOBehavior._properties
 * @mixes WaitUntilEnabledBehavior._methods
 * @mixes SAPUI5.RadioGroupTOBehavior._methods
 * @mixes SAPUI5.RadioGroupTOBehavior._properties
 */
function RadioGroupTO(session, description) {
    description = description || RadioGroup();
    var radioGroupTO = new SAPUI5BaseTestObject("SAPUIRadioGroup", session, description);

    radioGroupTO._mergeBehavior(HelperBehaviors.EnabledTOBehavior);
    radioGroupTO._mergeBehavior(RadioGroupTOBehavior);

    return radioGroupTO;
}

//Consts
var allItemsWiredName = "all items";
var selectWiredName = "Select";
/**
 * @ignore
 * @memberof SAPUI5
 */
var RadioGroupTOBehavior = {
    /**
     * @ignore
     * @memberof SAPUI5.RadioGroupTOBehavior
     */
    _properties: {
        /**
         * The list of all items contained in this object.
         * @function
         * @returns {Promise<string[]>} a promise that is fulfilled with an array of all items contained in this object.
         */
        items: {
            wiredName: allItemsWiredName,
            getter: function () {
                return this._getROProperty(allItemsWiredName, arguments).then(StringUtils.splitFunc(";"));
            }
        },
        /**
         * The title of the currently selected item.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the title of the currently selected item.
         */
        selectedItem: {
            wiredName: "selection"
        }
    },

    /**
     * @ignore
     * @memberof SAPUI5.RadioGroupTOBehavior
     */
    _methods: {
        /**
         * Selects the specified radio button from the radio group, replacing the previous selection.
         * @function
         * @param {string | number} value The radio button to select or its index. Index values begin with 0.
         * @returns {Promise<void>} a promise that is fulfilled after the select operation is performed.
         */
        select: {
            wiredName: selectWiredName,
            exec: function (item) {
                if (arguments.length === 0)
                    throw new Error("You must pass one argument to select() method");

                return this._executeWithEvents(arguments, selectWiredName, SapUI5HelperFuncs.itemTransform(item));
            }
        }
    }
};

module.exports.RadioGroup = RadioGroup;
module.exports.RadioGroupTO = RadioGroupTO;
