// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/28/2015.
 */

var Core = require("leanft.sdk.core");
var WebBehaviors = require("leanft.sdk.web").Behaviors;
var SAPUI5BaseDesc = require("./sapui5_base.js").SAPUI5BaseDesc;
var SAPUI5BaseTestObject = require("./sapui5_base.js").SAPUI5BaseTestObject;
var HelperBehaviors = require("./helper_behaviors.js");
var StringUtils = Core.StringUtils;

/**
 * Common methods for the accordion description
 * @ignore
 * @memberof SAPUI5
 */
var AccordionDescriptionBehavior = {
    /**
     * An array of all of the panels in the accordion.
     * @param {string[]} [items] An array of all of the panels in the accordion.
     * @returns {string[] | Description} If no parameters are provided, acts as a getter and returns an array of all the panels in the accordion.
     */
    items: function(items){
        return this._propertyHandler("all items", items, StringUtils.joinFunc(";"), StringUtils.splitFunc(";"));
    },
    /**
     * The number of panels contained in the accordion.
     * @param {number} [value] The number of panels contained in the accordion.
     * @returns {number | Description} If no parameters are provided, acts as a getter and returns the number of panels contained in the accordion.
     */
    itemsCount: function(value){ // number
        return this._propertyHandler("items count", value, Core.Convert.toNumber);
    }
};

/**
 * The description of an SAPUI5 Accordion test object.
 * @param {Object} [props] Initializes an Accordion test object using the supplied property bag.
 * @returns {Accordion} the description object that was initialized.
 * @constructor
 * @memberof SAPUI5
 * @extends SAPUI5.SAPUI5BaseDesc
 * @mixes SAPUI5.AccordionDescriptionBehavior
 */
function Accordion(props) {
    var accordionDes = new SAPUI5BaseDesc("Accordion");

    Core.ObjectUtils.extend(accordionDes, AccordionDescriptionBehavior);

    accordionDes._defineByPropertyBag(props);

    return accordionDes;
}

/**
 * An SAPUI5 Accordion test object.
 * @constructor
 * @memberof SAPUI5
 * @class AccordionTO
 * @extends SAPUI5.SAPUI5BaseTestObject
 * @mixes SAPUI5.ExpandCollapseItemTOBehavior._methods
 * @mixes SAPUI5.AccordionTOBehavior._properties
 */
function AccordionTO(session, description) {
    description = description || Accordion();
    var accordionTO = new SAPUI5BaseTestObject("SAPUIAccordion", session, description);

    accordionTO._mergeBehavior(HelperBehaviors.ExpandCollapseItemTOBehavior);
    accordionTO._mergeBehavior(AccordionTOBehavior);

    return accordionTO;
}

//Consts
var allItemsWiredName = "all items";

/**
 * @ignore
 * @memberof SAPUI5
 */
var AccordionTOBehavior = {
    /**
     * @ignore
     * @memberof SAPUI5.AccordionTOBehavior
     */
    _properties: {
        /**
         * The title of the selected panel.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the title of the selected panel.
         */
        selectedItem: {
            wiredName: "selected item"
        },
        /**
         * An array of all of the panels in the accordion.
         * @function
         * @returns {Promise<string[]>} a promise that is fulfilled with the array of all of the panels in the accordion.
         */
        items: {
            wiredName: allItemsWiredName,
            getter: function () {
                return this._getROProperty(allItemsWiredName, arguments).then(StringUtils.splitFunc(";"));
            }
        }
    },

    _additionalProperties: {
        itemsCount: {type: "uint", wiredName: "items count"}
    }
};

module.exports.Accordion = Accordion;
module.exports.AccordionTO = AccordionTO;

