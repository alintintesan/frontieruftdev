// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/31/2015.
 */

var Core = require("leanft.sdk.core");
var SAPUI5BaseDesc = require("./sapui5_base.js").SAPUI5BaseDesc;
var SAPUI5BaseTestObject = require("./sapui5_base.js").SAPUI5BaseTestObject;
var HelperBehaviors = require("./helper_behaviors.js");
var StringUtils = Core.StringUtils;

var SAPUI5HelperFuncs = HelperBehaviors.HelperFuncs;

/**
 * Common methods for the TabStrip description
 * @ignore
 * @memberof SAPUI5
 */
var TabStripDescriptionBehavior = {
    /**
     * The tabs in the tab strip.
     * @param {string[]} items The tabs in the tab strip.
     * @returns {string[] | Description} If no parameter is provided, the method acts as a getter and returns the current array of all tabs contained in this object;
     * otherwise it returns 'this' for use with the builder pattern.
     */
    tabs: function(items){
        return this._propertyHandler("all items", items, StringUtils.joinFunc(";"), StringUtils.splitFunc(";"));
    },
    /**
     * The number of tabs contained in the tab strip object.
     * @param {number} count The number of tabs contained in the tab strip object.
     * @returns {number | Description} If no parameter is provided, the method acts as a getter and returns the current number of tabs contained in the tab strip object.
     */
    tabsCount: function(count){
        return this._propertyHandler("items count", count, null, null, Core.Convert.toNumber);
    }
};

/**
 * The description of an SAPUI5 TabStrip test object.
 * @param {Object} [props] Initializes a TabStrip test object using the supplied property bag.
 * @returns {TabStrip} the description object that was initialized.
 * @constructor
 * @memberof SAPUI5
 * @extends SAPUI5.SAPUI5BaseDesc
 * @mixes SAPUI5.EnabledDescriptionBehavior
 * @mixes SAPUI5.TabStripDescriptionBehavior
 */
function TabStrip(props) {
    var tabStripDes = new SAPUI5BaseDesc("TabStrip");

    Core.ObjectUtils.extend(tabStripDes, HelperBehaviors.EnabledDescriptionBehavior);
    Core.ObjectUtils.extend(tabStripDes, TabStripDescriptionBehavior);

    tabStripDes._defineByPropertyBag(props);

    return tabStripDes;
}

/**
 * An SAPUI5 TabStrip.
 * @constructor
 * @memberof SAPUI5
 * @class TabStripTO
 * @extends SAPUI5.SAPUI5BaseTestObject
 * @mixes SAPUI5.EnabledTOBehavior._properties
 * @mixes WaitUntilEnabledBehavior._methods
 * @mixes SAPUI5.TabStripTOBehavior._properties
 * @mixes SAPUI5.TabStripTOBehavior._methods
 */
function TabStripTO(session, description) {
    description = description || TabStrip();
    var tabStripTO = new SAPUI5BaseTestObject("SAPUITabStrip", session, description);

    tabStripTO._mergeBehavior(HelperBehaviors.EnabledTOBehavior);
    tabStripTO._mergeBehavior(TabStripTOBehavior);

    return tabStripTO;
}

//Consts
var allItemsWiredName = "all items";
var selectWiredName = "Select";
var removeWiredName = "Remove";
var deselectWiredName = "Deselect";


/**
 * @ignore
 * @memberof SAPUI5
 */
var TabStripTOBehavior = {
    /**
     * @ignore
     * @memberof SAPUI5.TabStripTOBehavior
     */
    _properties: {
        /**
         * The tabs in the tab strip.
         * @function
         * @returns {Promise<string[]>} a promise that is fulfilled with the array of all tabs in the tab strip.
         */
        tabs: {
            wiredName: allItemsWiredName,
            getter: function () {
                return this._getROProperty(allItemsWiredName, arguments).then(StringUtils.splitFunc(";"));
            }
        },
        /**
         * The selected tab in the tab strip object.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the selected tab in the tab strip object.
         */
        selectedTab: {
            wiredName: "selected item"
        }
    },
    /**
     * @ignore
     * @memberof SAPUI5.TabStripTOBehavior
     */
    _methods: {
        /**
         * Selects the specified tab in the tab strip object.
         * @function
         * @param {string | number} value A tab in the tab strip or its 0-based index.
         * @returns {Promise<void>} a promise that is fulfilled after selecting the specified tab in the tab strip object.
         */
        select: {
            wiredName: selectWiredName,
            exec: function (tab) {
                if (arguments.length === 0)
                    throw new Error("You must pass one argument to select() method");

                return this._executeWithEvents(arguments, selectWiredName, SAPUI5HelperFuncs.itemTransform(tab)).then(function (res) {
                    if (false === res)
                        throw new Error("Cannot identify the tab in the SAPUI5 tabstrip test object. Confirm that the tab item exits in the tabstrip.");
                });
            }
        },
        /**
         * Removes the specified tab from the tab strip object.
         * @function
         * @param {string | number} value A tab in the tab strip or its 0-based index.
         * @returns {Promise<void>} a promise that is fulfilled after removing the specified tab from the tab strip object.
         */
        remove: {
            wiredName: removeWiredName,
            exec: function (tab) {
                if (arguments.length === 0)
                    throw new Error("You must pass one argument to remove() method");

                return this._executeWithEvents(arguments, removeWiredName, SAPUI5HelperFuncs.itemTransform(tab)).then(function (res) {
                    if (false === res)
                        throw new Error("Failed to remove the tab. Confirm that the tab item exists and is removable in the tabstrip.");
                });
            }
        },
        /**
         * Deselects the specified tab from the tab strip object.
         * @function
         * @param {string | number} value A tab in the tab strip or its 0-based index.
         * @returns {Promise<void>} a promise that is fulfilled after deselecting the specified tab from the tab strip object.
         */
        deselect: {
            wiredName: deselectWiredName,
            exec: function (tab) {
                if (arguments.length === 0)
                    throw new Error("You must pass one argument to deselect() method");

                return this._executeWithEvents(arguments, deselectWiredName, SAPUI5HelperFuncs.itemTransform(tab)).then(function (res) {
                    if (false === res)
                        throw new Error("Failed to deselect the tab. Confirm that the tab item exists and is deselectable in the tabstrip.");
                });
            }
        }
    }
};

module.exports.TabStrip = TabStrip;
module.exports.TabStripTO = TabStripTO;

