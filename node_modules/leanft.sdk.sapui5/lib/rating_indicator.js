// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..

var Core = require("leanft.sdk.core");
var Convert = Core.Convert;
var ObjectUtils = Core.ObjectUtils;
var SAPUI5BaseDesc = require("./sapui5_base.js").SAPUI5BaseDesc;
var SAPUI5BaseTestObject = require("./sapui5_base.js").SAPUI5BaseTestObject;
var HelperBehaviors = require("./helper_behaviors.js");

/**
 * Common methods for the RatingIndicator description
 * @ignore
 * @memberof SAPUI5
 */
var RatingIndicatorDescriptionBehavior = {
    /**
     * Indicates the rating level to which the object is currently set.
     * @param {number} ratingLevel The rating level to set.
     * @returns {number | Description} If no parameter is provided, the method acts as a getter and returns the current stored rating level;
     * otherwise it returns 'this' for use with the builder pattern.
     */
    rating: function(ratingLevel){
        return this._propertyHandler("rating", ratingLevel, Convert.toString, Convert.toNumber, Convert.toNumber);
    },

    /**
     * Indicates the highest rating level that can be set.
     * @param {number} maxRatingNum The highest rating level.
     * @returns {number | Description} If no parameter is provided, the method acts as a getter and returns the current stored highest rating level;
     * otherwise it returns 'this' for use with the builder pattern.
     */
    maxRating: function(maxRatingNum){
        return this._propertyHandler("maximum rating", maxRatingNum, Convert.toString, Convert.toNumber, Convert.toNumber);
    }
};

/**
 * The description of an SAPUI5 RatingIndicator test object.
 * @param {Object} [props] Initializes a RatingIndicator test object using the supplied property bag.
 * @returns {RatingIndicator} the description object that was initialized.
 * @constructor
 * @memberof SAPUI5
 * @extends SAPUI5.SAPUI5BaseDesc
 * @mixes SAPUI5.EnabledDescriptionBehavior
 * @mixes SAPUI5.OrientationDescriptionBehavior
 * @mixes SAPUI5.RatingIndicatorDescriptionBehavior
 */
function RatingIndicator(props) {
    var ratingIndicatorDes = new SAPUI5BaseDesc("RatingIndicator");

    ObjectUtils.extend(ratingIndicatorDes, HelperBehaviors.EnabledDescriptionBehavior);
    ObjectUtils.extend(ratingIndicatorDes, HelperBehaviors.OrientationDescriptionBehavior);
    ObjectUtils.extend(ratingIndicatorDes, RatingIndicatorDescriptionBehavior);

    ratingIndicatorDes._defineByPropertyBag(props);

    return ratingIndicatorDes;
}

/**
 * An SAPUI5 RatingIndicator.
 * @constructor
 * @memberof SAPUI5
 * @class RatingIndicatorTO
 * @extends SAPUI5.SAPUI5BaseTestObject
 * @mixes SAPUI5.EnabledTOBehavior._properties
 * @mixes WaitUntilEnabledBehavior._methods
 * @mixes SAPUI5.OrientationTOBehavior._properties
 * @mixes SAPUI5.RatingIndicatorTOBehavior._properties
 * @mixes SAPUI5.RatingIndicatorTOBehavior._methods
 */
function RatingIndicatorTO(session, description) {
    description = description || RatingIndicator();
    var ratingIndicatorTO = new SAPUI5BaseTestObject("SAPUIRatingIndicator", session, description);

    ratingIndicatorTO._mergeBehavior(HelperBehaviors.EnabledTOBehavior);
    ratingIndicatorTO._mergeBehavior(HelperBehaviors.OrientationTOBehavior);
    ratingIndicatorTO._mergeBehavior(RatingIndicatorTOBehavior);

    return ratingIndicatorTO;
}

//Consts
var maxRatingWiredName = "maximum rating";
var setRatingWiredName = "SetLevel";

/**
 * @ignore
 * @memberof SAPUI5
 */
var RatingIndicatorTOBehavior = {
    /**
     * @ignore
     * @memberof SAPUI5.RatingIndicatorTOBehavior
     */
    _properties: {
        /**
         * The rating level to which this object is currently set.
         * @function
         * @returns {Promise<number>} a promise that is fulfilled with the rating level to which this object is currently set.
         */
        rating: {
            type: 'double',
            getter: function () {
                return this._getROProperty("rating", arguments).then(Convert.toNumber);
            }
        },

        /**
         * The highest rating level that can be set.
         * @function
         * @returns {Promise<number>} a promise that is fulfilled with the highest rating level that can be set.
         */
        maxRating: {
            type: 'uint',
            wiredName: maxRatingWiredName,
            getter: function () {
                return this._getROProperty(maxRatingWiredName, arguments).then(Convert.toNumber);
            }
        }
    },

    /**
     * @ignore
     * @memberof SAPUI5.RatingIndicatorTOBehavior
     */
    _methods: {
        /**
         * Sets the rating level.
         * @function
         * @param {number} rating The rating level to set (0-based).
         * @returns {Promise<void>} a promise that is fulfilled after setting the specified level in the RatingIndicator.
         */
        setRating: {
            wiredName: setRatingWiredName,
            exec: function (rating) {
                return this._executeWithEvents(arguments, setRatingWiredName, Convert.toNumber(rating));
            }
        }
    }
};


module.exports.RatingIndicator = RatingIndicator;
module.exports.RatingIndicatorTO = RatingIndicatorTO;