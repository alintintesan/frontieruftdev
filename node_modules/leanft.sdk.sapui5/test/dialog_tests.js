// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/29/2015.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Dialog Test Object Behavior",function(){
    var DialogTO = require("../lib/dialog.js").DialogTO;
    var dialogTOBehaviorUnderTest;

    beforeEach(function(){
        dialogTOBehaviorUnderTest = DialogTO({});
        sinon.stub(dialogTOBehaviorUnderTest, "_executeCommand");
		
		dialogTOBehaviorUnderTest._session.fireEvent = sinon.stub();
        dialogTOBehaviorUnderTest._session._promiseManager = {wrapPromiseFunctionWithNotifyEvents: function () {} };
        sinon.stub(dialogTOBehaviorUnderTest._session._promiseManager, "wrapPromiseFunctionWithNotifyEvents", function (onStart, promiseFunc) {
            return promiseFunc();
        });
    });

    describe("close",function(){
        it("should call the _executeCommand method and pass it the correct arguments",function(){
            dialogTOBehaviorUnderTest.close();
            assert(dialogTOBehaviorUnderTest._executeCommand.calledOnce);
            assert.deepEqual(dialogTOBehaviorUnderTest._executeCommand.firstCall.args.slice(0, 1), ["Close"]);
        });
        it("should return the same promise that was returned from _executeCommand",function(){
            var getROPromise = {};
            dialogTOBehaviorUnderTest._executeCommand.returns(getROPromise);
            var res = dialogTOBehaviorUnderTest.close();
            assert.strictEqual(res,getROPromise);
        });
    });

});

