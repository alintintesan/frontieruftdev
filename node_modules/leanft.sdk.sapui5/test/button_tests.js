// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/28/2015.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Button Test Object Behavior",function(){
    var ButtonTO = require("../lib/button.js").ButtonTO;
    var buttonTOBehaviorUnderTest;

    beforeEach(function(){
        buttonTOBehaviorUnderTest = ButtonTO({});
        sinon.stub(buttonTOBehaviorUnderTest, "_executeCommand");
		
		buttonTOBehaviorUnderTest._session.fireEvent = sinon.stub();
        buttonTOBehaviorUnderTest._session._promiseManager = {wrapPromiseFunctionWithNotifyEvents: function () {} };
        sinon.stub(buttonTOBehaviorUnderTest._session._promiseManager, "wrapPromiseFunctionWithNotifyEvents", function (onStart, promiseFunc) {
            return promiseFunc();
        });
    });

    describe("openMenu",function(){
        it("should call the _executeCommand method an pass it the correct parameters",function(){
            buttonTOBehaviorUnderTest.openMenu();
            assert(buttonTOBehaviorUnderTest._executeCommand.calledOnce);
            assert.deepEqual(buttonTOBehaviorUnderTest._executeCommand.firstCall.args.slice(0, 1), ["OpenMenu"]);
        });
        it("should return the same promise that was returned from _executeCommand",function(){
            var getROPromise = {};
            buttonTOBehaviorUnderTest._executeCommand.returns(getROPromise);
            var res = buttonTOBehaviorUnderTest.openMenu();
            assert.strictEqual(res,getROPromise);
        });
    });

});