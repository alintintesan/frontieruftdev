// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 07/22/2016.
 */

var Core = require("leanft.sdk.core");
var Utils = Core.ObjectUtils;
var MergeBehavior = Core.MergeBehavior;

/**
 * A ComboBox Item object
 * @constructor
 * @class ComboBoxItem
 * @mixes SAPGUI.ComboBoxItemBehavior._properties
 * @mixes SAPGUI.ComboBoxItemBehavior._methods
 * @memberof SAPGUI
 */
function ComboBoxItem(ownerComboBox, identifier, textRepresentation) {
    Utils.extend(this, MergeBehavior);
    this._mergeBehavior(ComboBoxItemBehavior);
    this._ownerComboBox = ownerComboBox;
    if (typeof identifier === 'number')
        this._identifier = identifier - this._ownerComboBox._minimumItemIndex;//Change from 1-based to 0-based
    else
        this._identifier = identifier;
    this._textRepresentation = textRepresentation;
}

ComboBoxItem.prototype = {
    _ownerComboBox: null,
    _identifier: null,
    _textRepresentation: null
};

/**
 * The methods of ComboBox Item object
 * @memberof SAPGUI
 * @ignore
 */
var ComboBoxItemBehavior = {
    _helpers: {
        /**
         * Get the identifier of the item.
         * @returns {number|string} the identifier of the item.
         * @ignore
         */
        _getIdentifier: function () {
            return this._identifier;
        },

        /**
         * Get the text representation of the item.
         * @returns {string} the text representation of the item.
         * @ignore
         */
        _getTextRepresentation: function () {
            return this._textRepresentation;
        },

        /**
         * @ignore
         */
        _getKeyByArrayIndex: function (index) {
            return this._ownerComboBox._getAllItemsNames("AllKeys").then((function (allItems) {
                if (index >= 0 && index < allItems.length)
                    return allItems[index];
                return null;
            }).bind(this));
        }
    },

    /**
     * @memberof SAPGUI.ComboBoxItemBehavior
     * @ignore
     */
    _properties: {
        /*jshint eqnull:true */
        /**
         * The abbreviated value of the item.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the abbreviated value of the item.
         */
        key: function () {
            if (typeof this._identifier === 'number')
                return this._getKeyByArrayIndex(this._identifier);

            if (typeof this._identifier === 'string') {
                return this._ownerComboBox._getAllItemsNames("AllItems").then((function (allItems) {
                    var itemArrayIndex = allItems.indexOf(this._identifier);
                    if (itemArrayIndex >= 0) {
                        return this._getKeyByArrayIndex(itemArrayIndex);
                    }
                    throw new Error("ReplayItemNotFoundException: Cannot identify the specified item of the combo box test object. Confirm that the specified item is included in the object's item collection.");
                }).bind(this));
            }

            throw new Error("Not supported identifier type");
        },

        /**
         * Get the text property of the item.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the text of the item.
         */
        text: function () {
            return this._ownerComboBox._getAllItemsNames("AllItems").then((function (allItems) {
                if (typeof this._identifier === 'number') {
                    if (this._identifier >= 0 && this._identifier < allItems.length)
                        return allItems[this._identifier];
                    throw new Error("ReplayItemNotFoundException: Cannot identify the specified item of the combo box test object. Confirm that the specified item is included in the object's item collection.");
                }

                if (typeof this._identifier === 'string') {
                    if (allItems.indexOf(this._identifier) >= 0)
                        return this._identifier;
                    throw new Error("Cannot identify the specified item of the combo box test object. Confirm that the specified item is included in the object's item collection.");
                }

                throw new Error("Not supported identifier type");
            }).bind(this));
        }
    }
};

module.exports.ComboBoxItem = ComboBoxItem;