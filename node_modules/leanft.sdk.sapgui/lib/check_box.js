// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 06/24/2016.
 */

var Core = require("leanft.sdk.core");
var ObjUtils = Core.ObjectUtils;
var Convert = Core.Convert;

var SapGuiObjectBase = require("./sapgui_object_base.js");
var SapGuiBaseDescription = SapGuiObjectBase.SapGuiBaseDescription;
var SapGuiBaseTO = SapGuiObjectBase.SapGuiBaseTO;
var CheckedBehavior = require("./checked_behavior.js");
var CheckedDescriptionBehaviour = CheckedBehavior.CheckedDescriptionBehaviour;
var CheckedTOBehavior = CheckedBehavior.CheckedTOBehavior;

/**
 * @param {Object} [props] Initializes a Checkbox test object using the supplied property bag.
 * @returns {CheckBox} the description object that was initialized.
 * @constructor
 * @memberof SAPGUI
 * @extends SAPGUI.SapGuiBaseDescription
 * @mixes SAPGUI.CheckedDescriptionBehaviour
 */
function CheckBox(props){
    var checkBoxDesc = new SapGuiBaseDescription("CheckBox");
    ObjUtils.extend(checkBoxDesc, CheckedDescriptionBehaviour);
    checkBoxDesc._defineByPropertyBag(props);
    return checkBoxDesc;
}

/**
 * A CheckBoxTO object,
 * @constructor
 * @class CheckBoxTO
 * @extends SAPGUI.SapGuiBaseTO
 * @mixes SAPGUI.CheckedTOBehavior._properties
 * @mixes SAPGUI.CheckedTOBehavior._methods
 * @mixes SAPGUI.CheckBoxTOBehavior._methods
 * @mixes WaitUntilEnabledBehavior._methods
 * @memberof SAPGUI
 */
function CheckBoxTO(session, description) {
    description = description || CheckBox();
    var checkBoxTO = new SapGuiBaseTO("SAPGuiCheckBox", session, description);
    checkBoxTO._mergeBehavior(CheckedTOBehavior);
    checkBoxTO._mergeBehavior(CheckBoxTOBehavior);
    return checkBoxTO;
}

/**
 * The behaviors of the CheckBox object
 * @memberof SAPGUI
 * @ignore
 */
var CheckBoxTOBehavior = {
    /**
     * @memberof SAPGUI.CheckBoxTOBehavior
     * @ignore
     */
    _methods: {
        /*jshint eqnull:true */
        /**
         * Selects or unselects the check box.
         * @function
         * @param {boolean} state true to select.
         * @returns {Promise<void>} a promise that is fulfilled when the set operation ends.
         */
        set: function (state) {
            if (state == null)
                throw new Error("The state cannot be null.");
            return this._executeWithEvents(arguments, "Set", Convert.toBool(state) ? "ON" : "OFF");
        }
    }
};
module.exports.CheckBox = CheckBox;
module.exports.CheckBoxTO = CheckBoxTO;
