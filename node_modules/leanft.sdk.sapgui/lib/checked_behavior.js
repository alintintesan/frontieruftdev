// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 06/24/2016.
 */

var Core = require("leanft.sdk.core");
var Convert = Core.Convert;
var ObjectUtils = Core.ObjectUtils;
var WaitUntilEnabledBehavior = Core.WaitUntilEnabledBehavior;

/**
 * CheckedDescriptionBehaviour
 * @memberof SAPGUI
 * @ignore
 */
var CheckedDescriptionBehaviour = {
    /**
     * The static text attached to the control.
     * @param {string} [text] When provided, this method acts as a setter and sets the text value.
     * @returns {string | Description} If no parameter is provided, the method acts as a getter and returns the current stored text value;
     * otherwise it returns 'this' for use with the builder pattern.
     */
    attachedText: function (text) {
        return this._simplePropertyHandler("AttachedText", text);
    },

    /**
     * Indicates whether the control can accept user input.
     * @param {boolean} [isEnabled] When provided, this method acts as a setter and sets the isEnabled value.
     * @returns {boolean | Description} If no parameter is provided, the method acts as a getter and returns the current stored isEnabled value;
     * otherwise it returns 'this' for use with the builder pattern.
     */
    isEnabled: function (isEnabled) {
        return this._propertyHandler("Enabled", isEnabled, Convert.toBool);
    },

    /**
     * Indicates whether the control is selected.
     * @param {boolean} [isChecked] When provided, this method acts as a setter and sets the isChecked value.
     * @returns {boolean | Description} If no parameter is provided, the method acts as a getter and returns the current stored isChecked value;
     * otherwise it returns 'this' for use with the builder pattern.
     */
    isChecked: function (isChecked) {
        return this._propertyHandler("Selected", isChecked, Convert.toBool);
    }
};

/**
 * The behaviors of the CheckedTOBehavior object
 * @memberof SAPGUI
 * @ignore
 */
var CheckedTOBehavior = {
    /**
     * @memberof SAPGUI.CheckedTOBehavior
     * @ignore
     */
    _properties: {
        /**
         * The text associated with the control.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the text associated with the control.
         */
        attachedText: {
            wiredName: "AttachedText"
        },

        /**
         * Indicates whether user can change the control's state.
         * @function
         * @returns {Promise<boolean>} a promise that is fulfilled with an indication whether the user can change the control's state.
         */
        isEnabled: {
            wiredName: "Enabled"
        },

        /**
         * Indicates whether this control is selected.
         * @function
         * @returns {Promise<boolean>} a promise that is fulfilled with an indication whether this control is selected.
         */
        isChecked: {
            wiredName: "Selected"
        }
    },

    /**
     * @memberof SAPGUI.CheckedTOBehavior
     * @ignore
     */
    _methods: {
        /**
         * Sets focus on the control.
         * @function
         * @returns {Promise<void>} a promise that is fulfilled when the setFocus operation ends.
         */
        setFocus: function () {
            return this._executeWithEvents(arguments, "SetFocus");
        }
    }
};

ObjectUtils.combineBehaviors(CheckedTOBehavior, WaitUntilEnabledBehavior);

module.exports.CheckedDescriptionBehaviour = CheckedDescriptionBehaviour;
module.exports.CheckedTOBehavior = CheckedTOBehavior;