// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/27/2015.
 */
var Core = require("leanft.sdk.core");
var ObjUtils = Core.ObjectUtils;
var ClickBehavior = Core.ClickBehavior;
var DragAndDropBehavior = Core.DragAndDropBehavior;
var WebBase = require("./web_testobject_base.js").WebBaseTestObject;
var WebBaseDesc = require("./web_testobject_base.js").WebBaseDescription;
var WebElement = require("./webelement.js");
var EditFieldBase = require("./edit_field_base.js");
var Edit =  require("./edit.js");
var FormFieldBehavior = require("./helper_behaviors.js").FormFieldBehavior;
var NumericField = require("./numeric_field.js");
var IsEnabledTOBehavior = require("./helper_behaviors.js").IsEnabledTOBehavior;
var IsEnabledBehavior = require("./helper_behaviors.js").IsEnabledBehavior;

/**
 * The description of a Web Slider test object.
 * @param {Object} [props] Initializes the description using the supplied property bag.
 * @returns {Slider} the description object that was initialized.
 * @constructor
 * @memberof Web
 * @extends Web.WebBaseDescription
 * @mixes Web.WebElementDescriptionBehaviour
 * @mixes Web.EditDescriptionBehavior
 * @mixes Web.EditFieldBaseDescriptionBehavior
 * @mixes Web.FormFieldBehavior
 * @mixes Web.NumericFieldDescriptionBehavior
 * @mixes Web.IsEnabledBehavior
 */
function Slider(props) {

    var sliderDes = new WebBaseDesc("Slider"); // leanFTType

    ObjUtils.extend(sliderDes, IsEnabledBehavior);
    ObjUtils.extend(sliderDes, WebElement.WebElementDescriptionBehaviour);
    ObjUtils.extend(sliderDes, Edit.EditDescriptionBehavior);
    ObjUtils.extend(sliderDes, EditFieldBase.EditFieldBaseDescriptionBehavior);
    ObjUtils.extend(sliderDes, FormFieldBehavior);
    ObjUtils.extend(sliderDes, NumericField.NumericFieldDescriptionBehavior);

    sliderDes._defineByPropertyBag(props);

    return sliderDes;
}

/**
 * A numeric Web slider object. <br/>
 * Remarks: Introduced in HTML5. If a browser does not support this slider (for example, Internet Explorer 9), LeanFT uses an edit field (<input type="text"/>) instead.
 * @example
 * <input type="range" name="points" min="1" max=10 />
 * @class SliderTO
 * @memberof Web
 * @constructor
 * @extends Web.WebBaseTestObject
 * @mixes Web.WebElementTOBehavior._properties
 * @mixes Web.WebElementTOBehavior._methods
 * @mixes ClickBehavior._methods
 * @mixes DragAndDropBehavior._methods
 * @mixes Web.EditFieldBaseTestObjectBehavior._properties
 * @mixes Web.EditFieldBaseTestObjectBehavior._methods
 * @mixes Web.EditTOBehavior._properties
 * @mixes Web.EditTOBehavior._methods
 * @mixes Web.NumericFieldTOBehavior._properties
 * @mixes Web.NumericFieldTOBehavior._methods
 * @mixes Web.IsEnabledTOBehavior._properties
 * @mixes WaitUntilEnabledBehavior._methods
 */
function SliderTO(session, description) {
    description = description || Slider();
    var sliderTO = new WebBase("WebRange", session, description); // native class

    sliderTO._mergeBehavior(ClickBehavior);
    sliderTO._mergeBehavior(DragAndDropBehavior);
    sliderTO._mergeBehavior(IsEnabledTOBehavior);
    sliderTO._mergeBehavior(WebElement.WebElementTOBehavior);
    sliderTO._mergeBehavior(EditFieldBase.EditFieldBaseTestObjectBehavior);
    sliderTO._mergeBehavior(Edit.EditTOBehavior);
    sliderTO._mergeBehavior(NumericField.NumericFieldTOBehavior);

    return sliderTO;
}

module.exports.Slider = Slider;
module.exports.SliderTO = SliderTO;



