// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 8/16/2016.
 */

/**
 * Types of protocols that the terminal emulator supports.
 * @typedef {Object} Protocol
 * @property {string} pr3270 3270 protocol.
 * @property {string} pr5250 5250 protocol.
 * @property {string} prVt100 VT100 protocol.
 * @property {string} prOther Other protocol.
 * @memberof TerminalEmulators
 */
var Protocol = {
    /**
     * 3270
     */
    pr3270: "pr3270",
    /**
     * 5250
     */
    pr5250: "pr5250",
    /**
     * An image that is part of a client-side image map (relevant for area objects).
     */
    prVt100: "prvt100",
    /**
     * An image that is both a client image map and a server image map.
     */
    prOther: "prother"
};

/**
 * @ignore
 * @memberof TerminalEmulators
 */
var ProtocolConverter = {
    /**
     * @ignore
     * @memberof TerminalEmulators
     */
    _protocolToNativeString: {
        pr3270: "3270",
        pr5250: "5250",
        prvt100: "Not Applicable",
        prother: "Unknown"
    },
    /**
     * @ignore
     * @memberof TerminalEmulators
     */
    _nativeStringToProtocol: {
        "3270": "pr3270",
        "5250": "pr5250",
        "Not Applicable": "prvt100",
        "Unknown": "prother"
    },
    /*jshint eqnull:true */
    /**
     * @private
     * @ignore
     * @memberof TerminalEmulators
     */
    _protocolToNative: function (value) {
        var nativeString = ProtocolConverter._protocolToNativeString[value.toLowerCase()];
        if (nativeString == null) {
            throw new Error("You must supply a valid protocol");
        }

        return nativeString;
    },
    /**
     * @private
     * @ignore
     * @memberof TerminalEmulators
     */
    _nativeToProtocol: function (value) {
        var nativeString = ProtocolConverter._nativeStringToProtocol[value];
        if (nativeString == null) {
            throw new Error("Enum Protocol name not found");
        }

        return nativeString;
    }
};

module.exports.Protocol = Protocol;
module.exports.ProtocolConverter = ProtocolConverter;
