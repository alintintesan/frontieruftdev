// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 03/13/2018.
 */

var Core = require("leanft.sdk.core");
var Utils = Core.ObjectUtils;
var UiObjectBase = require("./ui_object_base.js");
var UiObjectBaseTO = UiObjectBase.UiObjectBaseTO;
var UiObjectBaseDescription = UiObjectBase.UiObjectBaseDescription;
var StdWinBehaviors = require("leanft.sdk.stdwin").Behaviors;
var StdWinUiObjectWithLayoutInfoBehaviour = StdWinBehaviors.UiObjectWithLayoutInfoBehaviour;
var StdWinUiObjectWithLayoutInfoDescription = StdWinBehaviors.UiObjectWithLayoutInfoDescription;
var StdWinToolBarTOBehavior = StdWinBehaviors.ToolBarTOBehavior;
var ContainerBehavior = Core.ContainerBehavior;
var WrappedItemExecutorBehavior = Core.ExecuteItemsWithEventsBehavior;
var ToolBarTOBaseBehavior = Core.ToolBarTOBaseBehavior;

/**
 * The description of a ToolBar test object.
 * @param {Object} [props] Initializes a ToolBar test object using the supplied property bag.
 * @returns {ToolBar} the description object that was initialized.
 * @class ToolBar
 * @memberof PowerBuilder
 * @extends PowerBuilder.UiObjectBaseDescription
 * @mixes StdWin.UiObjectWithLayoutInfoDescription
 */
function ToolBar(props) {
    var toolBarDesc = new UiObjectBaseDescription("ToolBar");
    Utils.extend(toolBarDesc, StdWinUiObjectWithLayoutInfoDescription);
    toolBarDesc._defineByPropertyBag(props);
    return toolBarDesc;
}

/**
 * A ToolBar object
 * @constructor
 * @class ToolBarTO
 * @extends PowerBuilder.UiObjectBaseTO
 * @mixes PowerBuilder.UiObjectWithLayoutInfoBehaviour._properties
 * @mixes ToolBarTOBaseBehavior
 * @mixes StdWin.ToolBarTOBehavior._methods
 * @mixes StdWin.ToolBarTOBehavior._properties
 * @memberof PowerBuilder
 */
function ToolBarTO(session, description) {
    description = description || ToolBar();
    var toolBarTO = new UiObjectBaseTO("PbToolbar", session, description);
    toolBarTO._mergeBehavior(StdWinUiObjectWithLayoutInfoBehaviour);
    toolBarTO._mergeBehavior(ContainerBehavior);
    toolBarTO._mergeBehavior(WrappedItemExecutorBehavior);
    toolBarTO._mergeBehavior(ToolBarTOBaseBehavior);
    toolBarTO._mergeBehavior(StdWinToolBarTOBehavior);
    toolBarTO._minimumItemIndex = 1;
    return toolBarTO;
}

module.exports.ToolBarTO = ToolBarTO;
module.exports.ToolBar = ToolBar;
