// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 10/10/2016.
 */

var Core = require("leanft.sdk.core");
var Utils = Core.ObjectUtils;
var MergeBehavior = Core.MergeBehavior;
var ComponentOneGridBehavior = require("./componentonegridbehavior.js").ComponentOneGridBehavior;
var TableBaseOperationBehavior = Core.TableBaseOperationBehavior;

/**
 * A ComponentOne C1TrueDBGrid control.
 * @constructor
 * @class C1TrueDbGrid
 * @mixes TableBaseOperationBehavior._properties
 * @mixes TableBaseOperationBehavior._methods
 * @mixes WinForms.ComponentOneGridBehavior._properties
 * @mixes WinForms.ComponentOneGridBehavior._methods
 * @mixes WinForms.C1TrueDbGridBehavior._methods
 * @mixes WinForms.C1TrueDbGridBehavior._properties
 * @memberof WinForms
 */
function C1TrueDbGrid(ownerTable) {
    Utils.extend(this, MergeBehavior);
    this._mergeBehavior(TableBaseOperationBehavior);
    this._mergeBehavior(ComponentOneGridBehavior);
    this._mergeBehavior(C1TrueDbGridBehavior);
    this._ownerTable = ownerTable;
}

C1TrueDbGrid.prototype = {
    _ownerTable: null
};

/**
 * The behaviors of the C1TrueDbGrid object
 * @memberof WinForms
 * @ignore
 */
var C1TrueDbGridBehavior = {
    /**
     * @memberof WinForms.C1TrueDbGridBehavior
     * @ignore
     */
    _methods: {
        /*jshint eqnull:true */
        /**
         * Double-clicks a column by column index or header.
         * @function
         * @param {string|number} column The column 0-based index or column caption.
         * @returns {Promise<void>} a promise that is fulfilled when the activateColumn operation ends.
         */
        activateColumn: function (column) {
            if (column == null)
                throw new Error("ArgumentException: column is required.");
            return this._ownerTable._executeWithEvents(arguments, "ActivateColumn", column);
        }
    }

};

module.exports.C1TrueDBGrid = C1TrueDbGrid;
