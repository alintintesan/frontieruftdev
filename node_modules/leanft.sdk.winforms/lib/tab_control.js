// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 05/25/2016.
 */

var Core = require("leanft.sdk.core");
var Utils = Core.ObjectUtils;
var StringUtils = Core.StringUtils;
var UiObjectBase = require("./ui_object_base.js");
var UiObject = require("./ui_object.js");
var UiObjectBaseTO = UiObjectBase.UiObjectBaseTO;
var UiObjectBehaviour = UiObject.UiObjectBehaviour;
var UiObjectBaseDescription = UiObjectBase.UiObjectBaseDescription;
var UIObjectDescription = UiObject.UIObjectDescription;
var MouseButton = Core.MouseButton;
var TabControlDescriptionBehavior = Core.TabControlDescriptionBehavior;

/**
 * The description of a TabControl test object.
 * @param {Object} [props] Initializes a TabControl test object using the supplied property bag.
 * @returns {TabControl} the description object that was initialized.
 * @class TabControl
 * @memberof WinForms
 * @extends WinForms.UiObjectBaseDescription
 * @mixes WinForms.UIObjectDescription
 * @mixes WinForms.TabControlDescriptionBehavior
 */
function TabControl(props) {
    var tabControlDesc = new UiObjectBaseDescription("TabControl");
    Utils.extend(tabControlDesc, UIObjectDescription);
    Utils.extend(tabControlDesc, TabControlDescriptionBehavior);
    tabControlDesc._defineByPropertyBag(props);
    return tabControlDesc;
}

/**
 * A TabControl object,
 * @constructor
 * @class TabControlTO
 * @extends WinForms.UiObjectBaseTO
 * @mixes WinForms.UiObjectBehaviour._properties
 * @mixes WinForms.TabControlTOBehavior._methods
 * @mixes WinForms.TabControlTOBehavior._properties
 * @memberof WinForms
 */
function TabControlTO(session, description) {
    description = description || TabControl();
    var tabControlTO = new UiObjectBaseTO("SwfTab", session, description);
    tabControlTO._mergeBehavior(UiObjectBehaviour);
    tabControlTO._mergeBehavior(TabControlTOBehavior);
    return tabControlTO;
}

//Consts
var tabsWiredName = "all items";

/**
 * The behaviors of the TabControl object
 * @memberof WinForms
 * @ignore
 */
var TabControlTOBehavior = {
    /**
     * @ignore
     * @memberof WinForms.TabControlTOBehavior
     */
    _properties: {
        /**
         * Returns an array of all tabs in the TabControl.
         * @function
         * @returns {Promise<string[]>} a promise that is fulfilled with an array of all tabs in the TabControl.
         */
        tabs: {
            wiredName: tabsWiredName,
            getter: function () {
                return this._getROProperty(tabsWiredName, arguments).then((function (result) {
                    if (StringUtils.isNullOrEmpty(result))
                        return [];
                    var listOfItems = result.split("\n");
                    return listOfItems;
                }).bind(this));
            }
        },

        /**
         * Returns the selected tab in the TabControl.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the selected Tab.
         */
        selectedTab: {
            wiredName: "selection"
        }
    },

    /**
     * @ignore
     * @memberof WinForms.TabControlTOBehavior
     */
    _methods: {
        /*jshint eqnull:true */
        /**
         * Selects the specified tab item
         * @function
         * @param {number|string} tab The tab to be selected.
         * The input can be the 0-based index of the tab or the name/text of the tab
         * @param {MouseButton} [button = MouseButton.left] The button to activate. Default is the left button.
         * @returns {Promise<void>} a promise that is fulfilled when the activate operation is performed.
         */
        select: function (tab, button) {
            if (tab == null)
                throw new Error("The tab cannot be null.");

            var mouse_button = button || MouseButton.left;
            return this._executeWithEvents(arguments, "Select", tab, MouseButton._convert(mouse_button));
        }
    },

    _additionalProperties: {
        tabsCount: {wiredName: "items count"}
    }
};

module.exports.TabControl = TabControl;
module.exports.TabControlTO = TabControlTO;
