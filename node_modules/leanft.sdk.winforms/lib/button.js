// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 09/19/2016.
 */

var Core = require("leanft.sdk.core");
var Utils = Core.ObjectUtils;

var UiObjectBase = require("./ui_object_base.js");
var UiObjectBaseTO = UiObjectBase.UiObjectBaseTO;
var UiObjectBaseDescription = UiObjectBase.UiObjectBaseDescription;

/**
 * @param {Object} [props] Initializes a Button test object using the supplied property bag.
 * @returns {Button} the description object that was initialized.
 * @constructor
 * @extends WinForms.UiObjectBaseDescription
 * @memberof WinForms
 */
function Button(props){
    var buttonDesc = new UiObjectBaseDescription("Button");
    buttonDesc._defineByPropertyBag(props);
    return buttonDesc;
}

/**
 * A ButtonTO object,
 * @constructor
 * @class ButtonTO
 * @extends WinForms.UiObjectBaseTO
 * @mixes WinForms.ButtonTOBehavior._properties
 * @memberof WinForms
 */
function ButtonTO(session, description) {
    description = description || Button();
    var buttonTO = new UiObjectBaseTO("SwfButton", session, description);
    buttonTO._mergeBehavior(ButtonTOBehavior);
    return buttonTO;
}

/**
 * The behaviors of the ButtonTO object
 * @memberof WinForms
 * @ignore
 */
var ButtonTOBehavior = {
    /**
     * @ignore
     * @memberof WinForms.ButtonTOBehavior
     */
    _properties: {
        /**
         * Returns the tooltip text of the error icon associated with this object.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the tooltip text of the error icon associated with this object.
         */
        errorText: function () {
            return this._executeWithEventsOnError(arguments, "GetErrorProviderText");
        }
    }
};

module.exports.Button = Button;
module.exports.ButtonTO = ButtonTO;