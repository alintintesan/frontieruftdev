// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..

var assert = require("assert");
var sinon = require("sinon");

var WPFFactory = require("../lib/wpf_factory.js").WPFFactory;


describe("WPFFactory", function () {
    var factoryUnderTest;
    var sessionMock;

    beforeEach(function () {
        sessionMock = {

        };
        factoryUnderTest = new WPFFactory({});
    });

    describe("all test objects tests", function () {
        it("should have waitUntilEnabled function if they have isEnabled function", function () {
            Object.keys(factoryUnderTest._constructors).forEach(function(type) {
                var constructor =  factoryUnderTest._constructors[type];
                var testObject = new constructor(sessionMock, null);

                if(testObject.isEnabled) {
                    assert(testObject.waitUntilEnabled, "testObject: " + type + " does not have waitUntilEnabled");
                }
            });
        });

        it("should have waitUntilVisible function if they have isVisible function", function () {
            Object.keys(factoryUnderTest._constructors).forEach(function(type) {
                var constructor =  factoryUnderTest._constructors[type];
                var testObject = new constructor(sessionMock, null);

                if(testObject.isVisible) {
                    assert(testObject.waitUntilVisible, "testObject: " + type + " does not have waitUntilEnabled");
                }
            });
        });
    });

});