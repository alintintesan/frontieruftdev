// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..

/*
 * Created on 19/11/2015.
 */
var assert = require("assert");

var Location = require("../lib/location.js").Location;
var Position = require("../lib/location.js").Position;

describe("Location Tests",function() {
   it("empty args are given, should return default values", function() {
       var res = Location({});
       assert.deepEqual(res, {
           Type: "Location",
           Offset: {
               Type: "Point",
               X: 0,
               Y: 0
           },
           Anchor: Position._convert(Position.center)
       })
   });

    it("anchor only is given, offset should be 0,0", function(){
        var res = Location({
            anchor: Position.bottomRight
        });
        assert.deepEqual(res, {
            Type: "Location",
            Offset: {
                Type: "Point",
                X: 0,
                Y: 0
            },
            Anchor: Position._convert(Position.bottomRight)
        })
    });

    it("offset: x only is given, y should be 0 and anchor should be center", function() {
        var res = Location({
            offset: {
                x: 18
            }
        });
        assert.deepEqual(res, {
            Type: "Location",
            Offset: {
                Type: "Point",
                X: 18,
                Y: 0
            },
            Anchor: Position._convert(Position.center)
        })
    });

    it("offset: y only is given, x should be 0 and anchor should be center", function() {
        var res = Location({
            offset: {
                y: 18
            }
        });
        assert.deepEqual(res, {
            Type: "Location",
            Offset: {
                Type: "Point",
                X: 0,
                Y: 18
            },
            Anchor: Position._convert(Position.center)
        })
    });

    it("offset and anchor are given, values should be correct", function() {
        var res = Location({
            offset: {
                x: 7,
                y: 18
            },
            anchor: Position.topLeft
        });
        assert.deepEqual(res, {
            Type: "Location",
            Offset: {
                Type: "Point",
                X: 7,
                Y: 18
            },
            Anchor: Position._convert(Position.topLeft)
        })
    });

    it("should convert the anchor to its int position in the enum",function(){
        var res = Location({
            offset: {
                x: 7,
                y: 18
            },
            anchor: "center"
        });
        assert.deepEqual(res, {
            Type: "Location",
            Offset: {
                Type: "Point",
                X: 7,
                Y: 18
            },
            Anchor: 2   //center
        })
    })
});