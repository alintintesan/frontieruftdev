// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 06/14/2016.
 */

var Convert = require("./convert.js").Convert;
var StringUtils = require("./object_utils.js").StringUtils;

/**
 * The behaviors of a container item
 * @ignore
 */
var ContainerBehavior = {
    _allItemsDefaultWiredName: "all items",
    _itemsCountDefaultWiredName: "items count",
    _selectedItemsDefaultWiredName: "selection",
    _checkedItemsDefaultWiredName: "checked",
    _helpers: {
        /*jshint eqnull:true */
        /**
         * @ignore
         */
        _items: function (separator, allItemsProp, itemsCountProp) {
            if (allItemsProp == null)
                allItemsProp = ContainerBehavior._allItemsDefaultWiredName;
            if (itemsCountProp == null)
                itemsCountProp = ContainerBehavior._itemsCountDefaultWiredName;
            return this._getROPropertiesWithoutEvents(allItemsProp, itemsCountProp).then((function (result) {
                var itemCount = result[1];
                if (itemCount === 0)
                    return [];
                var listOfItems = result[0].split(separator, itemCount);
                return listOfItems.map(function (item, index) {
                    return this._createItem(index + this._minimumItemIndex, item);
                }, this);
            }).bind(this));
        },

        /*jshint eqnull:true */
        /**
         * @ignore
         */
        _nativePropertyToItems: function (separator, prop) {
            return this._getROProperty(prop, arguments.callee.caller.arguments).then((function (result) {
                if (StringUtils.isNullOrEmpty(result))
                    return [];
                var listOfItems = result.split(separator);
                return listOfItems.map(function (item) {
                    return this._createItem(item, item);
                }, this);
            }).bind(this));
        },

        /**
         * @ignore
         */
        _selectedItems: function (separator) {
            return this._nativePropertyToItems(separator, ContainerBehavior._selectedItemsDefaultWiredName);
        },

        /*jshint eqnull:true */
        /**
         * @ignore
         */
        _checkedItems: function (indexSeparator, itemSeparator) {
            return this._getROProperties(arguments.callee.caller.arguments, ContainerBehavior._checkedItemsDefaultWiredName, ContainerBehavior._allItemsDefaultWiredName)
                .then((function (result) {
                    if (result == null || StringUtils.isNullOrEmpty(result[0]))
                        return [];
                    var listOfCheckedItems = result[0].split(indexSeparator);
                    var listOfItems = result[1].split(itemSeparator);
                    return listOfCheckedItems.map(function (item) {
                        var itemIndex = Convert.toNumber(item) - this._minimumItemIndex;
                        return this._createItem(itemIndex, listOfItems[itemIndex]);
                    }, this);
                }).bind(this));
        },

        /*jshint eqnull:true */
        /**
         * @ignore
         */
        _getAllItemsNames: function (allItemsProp) {
            if (allItemsProp == null)
                allItemsProp = ContainerBehavior._allItemsDefaultWiredName;
            return this._getROPropertyWithoutEvents(allItemsProp).then((function (result) {
                if (StringUtils.isNullOrEmpty(result))
                    return [];
                if (result.slice(-1) === ';')
                    result = result.slice(0, -1);//remove the last ';' character
                return result.split(';');
            }).bind(this));
        },

        _minimumItemIndex: 0
    }
};

module.exports.ContainerBehavior = ContainerBehavior;
