// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 05/24/2016.
 */

var Convert = require("./convert.js").Convert;

//Consts
var setValueWiredName = "Set";
var upWiredName = "Next";
var downWiredName = "Prev";

/**
 * The behaviors of the SpinBox object
 * @ignore
 */
var SpinBoxTOBaseBehavior = {
    /**
     * @ignore
     * @memberof SpinBoxTOBaseBehavior
     */
    _methods: {

        /*jshint eqnull:true */
        /**
         * Sets the spin object value.
         * @function
         * @param {number} value The value to be set.
         * @returns {Promise<void>} a promise that is fulfilled when the operation is performed.
         */
        setValue: {
            wiredName: setValueWiredName,
            exec: function (value) {
                if (value == null)
                    throw new Error("The parameter value cannot be null.");
                return this._executeWithEvents(arguments, setValueWiredName, Convert.toNumber(value));
            }
        },

        /**
         * Sets this spin object to the next higher value.
         * @function
         * @returns {Promise<void>} a promise that is fulfilled when the operation is performed.
         */
        up: {
            wiredName: upWiredName,
            exec: function () {
                return this._executeWithEvents(arguments, upWiredName);
            }
        },

        /**
         * Sets this spin object to the next lower value.
         * @function
         * @returns {Promise<void>} a promise that is fulfilled when the operation is performed.
         */
        down: {
            wiredName: downWiredName,
            exec: function () {
                return this._executeWithEvents(arguments, downWiredName);
            }
        }
    }
};

module.exports.SpinBoxTOBaseBehavior = SpinBoxTOBaseBehavior;