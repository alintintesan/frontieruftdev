// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 08/25/2016.
 */

/**
 * ListItemBaseBehavior - the description for a ListItem objects of StdWin and WinForms
 * @ignore
 */
var ListItemBaseBehavior = {
    /**
     * @memberof ListItemBaseBehavior
     * @ignore
     */
    _properties: {
        /**
         * The text value of the list item, or "" when empty.
         * @function
         * @returns {Promise<string>} a promise fulfilled with the text of the item.
         */
        text: function () {
            return this._executeWithEventsOnItemOnError(this._ownerListBox._getItemText, this._identifier);
        },

        /**
         * Indicates whether the list item has focus in a multiple selection list box.
         * @function
         * @returns {Promise<boolean>} a promise fulfilled with the indication whether the item is focused or not.
         */
        isFocused: function () {
            return this._executeWithEventsOnItemOnError(this._ownerListBox._isItemFocused, this._identifier);
        },

        /**
         * The height of the list item (in pixels).
         * @function
         * @returns {Promise<number>} a promise fulfilled with the height of the item.
         */
        height: function () {
            return this._executeWithEventsOnItemOnError(this._ownerListBox._getItemHeight, this._identifier);
        },

        /**
         * @ignore
         */
        //Does not work in UFT, so commented out in the interface
        //TODO: uncomment in the IListItem interface once the UFT defect is solved. Defect# 14058
        //isAnchor: function () {
        //    return this._ownerListBox._isItemAnchor(this._identifier);
        //},

        /**
         * Indicates whether the list item is selected.
         * @function
         * @returns {Promise<boolean>} a promise fulfilled with the indication whether the item is selected or not.
         */
        isSelected: function () {
            return this._executeWithEventsOnItemOnError(this._ownerListBox._isItemSelected, this._identifier);
        }
    },

    _helpers: {
        _textRepresentation: null,
        _ownerListBox: null,
        _identifier: null,
        _executeWithEventsOnItem: null,
        _executeWithEventsOnItemOnError: null,

        /**
         * Get the identifier of the item.
         * @returns {number|string} the identifier of the item.
         * @ignore
         */
        _getIdentifier: function () {
            return this._identifier;
        },

        /**
         * Get the text representation of the item.
         * @returns {string} the text representation of the item.
         * @ignore
         */
        _getTextRepresentation: function () {
            return this._textRepresentation;
        }
    }
};

module.exports.ListItemBaseBehavior = ListItemBaseBehavior;
