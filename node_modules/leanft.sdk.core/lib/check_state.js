// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 06/17/2016.
 */

/**
 * The state of a check box.
 * @typedef {CheckedState} CheckedState
 * @property {string} unchecked The check box is unchecked.
 * @property {string} checked The check box is checked.
 * @property {string} indeterminate The check box is indeterminate. An indeterminate check box generally has a shaded appearance.
 */
var CheckedState = {
    /**
     * @type {string}
     */
    unchecked: "unchecked",
    /**
     * @type {string}
     */
    checked: "checked",
    /**
     * @type {string}
     */
    indeterminate: "indeterminate",

    /**
     * @ignore
     */
    _convertToNative: {
        unchecked: "OFF",
        checked: "ON",
        indeterminate: "DIMMED"
    },

    /**
     * @ignore
     */
    _convertToNative4DotNet: {
        unchecked: 0,
        checked: 1,
        indeterminate: 2
    },

    /**
     * @ignore
     */
    _convertToCheckedState: {
        on: "checked",
        off: "unchecked",
        dimmed: "indeterminate"
    },

    /**
     * @ignore
     */
    _convertToCheckedState4DotNet: {
        0: "unchecked",
        1: "checked",
        2: "indeterminate"
    },

    /**
     * @ignore
     */
    _nativeToCheckedState: function (state) {
        return CheckedState._convertToCheckedState[state.toLowerCase()];
    },

    /**
     * @ignore
     */
    _nativeToCheckedState4DotNet: function (state) {
        return CheckedState._convertToCheckedState4DotNet[state];
    },

    /**
     * @ignore
     */
    _checkedStateToNative: function (state) {
        return CheckedState._convertToNative[state.toLowerCase()];
    },

    /**
     * @ignore
     */
    _checkedStateToNative4DotNet: function (state) {
        return CheckedState._convertToNative4DotNet[state.toLowerCase()];
    }
};
module.exports.CheckedState = CheckedState;