// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
var ArrayUtils = require("./object_utils.js").ArrayUtils;

var ExecuteItemsWithEventsBehavior = {
    _helpers: {
        _executeWithEventsOnItem: function (caller, func) {
            var executionArgs = this._getItemExecutionArgs(caller, arguments);
            return this._executeEvents(executionArgs.args, arguments.callee.caller.arguments, false, func, executionArgs.name, executionArgs.caller);
        },

        _executeWithEventsOnItemOnError: function (caller, func) {
            var executionArgs = this._getItemExecutionArgs(caller, arguments);
            return this._executeEvents(executionArgs.args, arguments.callee.caller.arguments, true, func, executionArgs.name, executionArgs.caller);
        },

        _getItemExecutionArgs: function (caller, callerArguments) {
            var args = ArrayUtils.toArray(callerArguments);
            args.splice(0, 1);
            var name = this.findMethodName(caller, callerArguments.callee.caller);
            return {name: name, args: args, caller: caller};
        },

        _executeNotWrapped: function (originalArguments) {
            var args = ArrayUtils.toArray(arguments);
            args.splice(0, 1);
            if(originalArguments.length > 0) {
                args.push(originalArguments[originalArguments.length - 1]);
            }
            return this._executeCommand.apply(this, args);
        }
    }
};

module.exports = ExecuteItemsWithEventsBehavior;