// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..

/** @private */
var ArrayUtils = require("./object_utils.js").ArrayUtils;
var ObjectUtils = require("./object_utils.js").ObjectUtils;
var ReplayErrorsBehavior = require("./replay_errors.js");
var Logger = require("./logger.js").Logger;
var NotifyEventsBehavior = require("./notify_events_behavior.js");
var ExecuteUtilityCommandBehavior = require("./execute_utility_command_behavior.js");


/**
 * A class that enables low-level keyboard operations.
 * @class Keyboard
 */

/**
 * A constructor method that is called by the factory.
 * @param {Session} session The session to which the constructed object belongs.
 * @returns {Keyboard}
 * @constructor
 * @private
 */
function Keyboard(session){
    this._logger = new Logger("Keyboard");
    if(session === null){
        throw new Error("The communication channel is mandatory for creating Keyboard");
    }

    this._session = session;
    ObjectUtils.extend(this, ReplayErrorsBehavior);
    ObjectUtils.extend(this, NotifyEventsBehavior);
    ObjectUtils.extend(this, ExecuteUtilityCommandBehavior);
}

Keyboard.prototype = {
    _logger: null,
    _session: null,

    _convertToKey: {
        space : 1,
        escape : 2,
        tab : 3,
        alt : 4,
        leftalt : 5,
        rightalt : 6,
        control : 7,
        leftcontrol : 8,
        rightcontrol : 9,
        shift : 10,
        leftshift : 11,
        rightshift : 12,
        system : 13,
        leftsystem : 14,
        rightsystem : 15,
        f1 : 16,
        f2 : 17,
        f3 : 18,
        f4 : 19,
        f5 : 20,
        f6 : 21,
        f7 : 22,
        f8 : 23,
        f9 : 24,
        f10 : 25,
        f11 : 26,
        f12 : 27,
        d0 : 28,
        d1 : 29,
        d2 : 30,
        d3 : 31,
        d4 : 32,
        d5 : 33,
        d6 : 34,
        d7 : 35,
        d8 : 36,
        d9 : 37,
        a : 38,
        b : 39,
        c : 40,
        d : 41,
        e : 42,
        f : 43,
        g : 44,
        h : 45,
        i : 46,
        j : 47,
        k : 48,
        l : 49,
        m : 50,
        n : 51,
        o : 52,
        p : 53,
        q : 54,
        r : 55,
        s : 56,
        t : 57,
        u : 58,
        v : 59,
        w : 60,
        x : 61,
        y : 62,
        z : 63,
        grave : 64,
        minus : 65,
        equal : 66,
        backspace : 67,
        leftbracket : 68,
        rightbracket : 69,
        backslash : 70,
        semicolon : 71,
        quote : 72,
        return : 73,
        comma : 74,
        period : 75,
        slash : 76,
        left : 77,
        up : 78,
        right : 79,
        down : 80,
        print : 81,
        pause : 82,
        insert : 83,
        delete : 84,
        home : 85,
        end : 86,
        pageup : 87,
        pagedown : 88,
        add : 89,
        subtract : 90,
        multiply : 91,
        divide : 92,
        decimal : 93,
        enter : 94,
        num0 : 95,
        num1 : 96,
        num2 : 97,
        num3 : 98,
        num4 : 99,
        num5 : 100,
        num6 : 101,
        num7 : 102,
        num8 : 103,
        num9 : 104,
        capslock : 105,
        scrolllock : 106,
        numlock : 107
    },

    /**
     * The Keys enum.
     * @enum
     */
     Keys: {
        /**
         * The Space key.
         * @type {string}
         */
        space : 'space',
        /**
         * The Escape key.
         * @type {string}
         */
        escape : 'escape',
        /**
         * The Tab key.
         * @type {string}
         */
        tab : 'tab',
        /**
         *  The Alt key.
         * @type {string}
         */
        alt : 'alt',
        /**
         *  The Left Alt key.
         * @type {string}
         */
        leftAlt : 'leftAlt',
        /**
         *  The Right Alt key.
         * @type {string}
         */
        rightAlt : 'rightAlt',
        /**
         *  The Control key.
         * @type {string}
         */
        control : 'control',
        /**
         *  The Left Control key.
         * @type {string}
         */
        leftControl : 'leftControl',
        /**
         *  The Right Control key.
         * @type {string}
         */
        rightControl : 'rightControl',
        /**
         * The Shift key.
         * @type {string}
         */
        shift : 'shift',
        /**
         * The Left Shift.
         * @type {string}
         */
        leftShift : 'leftShift',
        /**
         * The Right Shift.
         * @type {string}
         */
        rightShift : 'rightShift',
        /**
         * The System key.
         * @type {string}
         */
        system : 'system',
        /**
         * The Left System key.
         * @type {string}
         */
        leftSystem : 'leftSystem',
        /**
         * The Right System key.
         * @type {string}
         */
        rightSystem : 'rightSystem',
        /**
         * The F1 key.
         * @type {string}
         */
        f1 : 'f1',
        /**
         * The F2 key.
         * @type {string}
         */
        f2 : 'f2',
        /**
         * The F3 key.
         * @type {string}
         */
        f3 : 'f3',
        /**
         * The F4 key.
         * @type {string}
         */
        f4 : 'f4',
        /**
         * The F5 key.
         * @type {string}
         */
        f5 : 'f5',
        /**
         * The F6 key.
         * @type {string}
         */
        f6 : 'f6',
        /**
         * The F7 key.
         * @type {string}
         */
        f7 : 'f7',
        /**
         * The F8 key.
         * @type {string}
         */
        f8 : 'f8',
        /**
         * The F9 key.
         * @type {string}
         */
        f9 : 'f9',
        /**
         * The F10 key.
         * @type {string}
         */
        f10 : 'f10',
        /**
         * The F11 key.
         * @type {string}
         */
        f11 : 'f11',
        /**
         * The F12 key.
         * @type {string}
         */
        f12 : 'f12',
        /**
         * The 0 key.
         * @type {string}
         */
        d0 : 'd0',
        /**
         * The 1 key.
         * @type {string}
         */
        d1 : 'd1',
        /**
         * The 2 key.
         * @type {string}
         */
        d2 : 'd2',
        /**
         * The 3 key.
         * @type {string}
         */
        d3 : 'd3',
        /**
         * The 4 key.
         * @type {string}
         */
        d4 : 'd4',
        /**
         * The 5 key.
         * @type {string}
         */
        d5 : 'd5',
        /**
         * The 6 key.
         * @type {string}
         */
        d6 : 'd6',
        /**
         * The 7 key.
         * @type {string}
         */
        d7 : 'd7',
        /**
         * The 8 key.
         * @type {string}
         */
        d8 : 'd8',
        /**
         * The 9 key.
         * @type {string}
         */
        d9 : 'd9',
        /**
         * The A key.
         * @type {string}
         */
        a : 'a',
        /**
         * The B key.
         * @type {string}
         */
        b : 'b',
        /**
         * The C key.
         * @type {string}
         */
        c : 'c',
        /**
         * The D key.
         * @type {string}
         */
        d : 'd',
        /**
         * The E key.
         * @type {string}
         */
        e : 'e',
        /**
         * The F key.
         * @type {string}
         */
        f : 'f',
        /**
         * The G key.
         * @type {string}
         */
        g : 'g',
        /**
         * The H key.
         * @type {string}
         */
        h : 'h',
        /**
         * The I key.
         * @type {string}
         */
        i : 'i',
        /**
         * The J key.
         * @type {string}
         */
        j : 'j',
        /**
         * The K key.
         * @type {string}
         */
        k : 'k',
        /**
         * The L key.
         * @type {string}
         */
        l : 'l',
        /**
         * The M key.
         * @type {string}
         */
        m : 'm',
        /**
         * The N key.
         * @type {string}
         */
        n : 'n',
        /**
         * The O key.
         * @type {string}
         */
        o : 'o',
        /**
         * The P key.
         * @type {string}
         */
        p : 'p',
        /**
         * The Q key.
         * @type {string}
         */
        q : 'q',
        /**
         * The R key.
         * @type {string}
         */
        r : 'r',
        /**
         * The S key.
         * @type {string}
         */
        s : 's',
        /**
         * The T key.
         * @type {string}
         */
        t : 't',
        /**
         * The U key.
         * @type {string}
         */
        u : 'u',
        /**
         * The V key.
         * @type {string}
         */
        v : 'v',
        /**
         * The W key.
         * @type {string}
         */
        w : 'w',
        /**
         * The X key.
         * @type {string}
         */
        x : 'x',
        /**
         * The Y key.
         * @type {string}
         */
        y : 'y',
        /**
         * The Z key.
         * @type {string}
         */
        z : 'z',
        /**
         * The Grave key.
         * @type {string}
         */
        grave : 'grave',
        /**
         * The Minus key.
         * @type {string}
         */
        minus : 'minus',
        /**
         * The Equal key.
         * @type {string}
         */
        equal : 'equal',
        /**
         * The Backspace key.
         * @type {string}
         */
        backspace : 'backspace',
        /**
         * The Left Bracket key.
         * @type {string}
         */
        leftBracket : 'leftBracket',
        /**
         * The Right Bracket key.
         * @type {string}
         */
        rightBracket : 'rightBracket',
        /**
         * The Backslash key.
         * @type {string}
         */
        backslash : 'backslash',
        /**
         * The Semicolon key.
         * @type {string}
         */
        semicolon : 'semicolon',
        /**
         * The Quote key.
         * @type {string}
         */
        quote : 'quote',
        /**
         * The Return key.
         * @type {string}
         */
        return : 'return',
        /**
         * The Comma key.
         * @type {string}
         */
        comma : 'comma',
        /**
         * The Period key.
         * @type {string}
         */
        period : 'period',
        /**
         * The Slash key.
         * @type {string}
         */
        slash : 'slash',
        /**
         * The Left key.
         * @type {string}
         */
        left : 'left',
        /**
         * The Up key.
         * @type {string}
         */
        up : 'up',
        /**
         * The Right key.
         * @type {string}
         */
        right : 'right',
        /**
         * The Down key.
         * @type {string}
         */
        down : 'down',
        /**
         * The Print key.
         * @type {string}
         */
        print : 'print',
        /**
         * The Pause key.
         * @type {string}
         */
        pause : 'pause',
        /**
         * The Insert key.
         * @type {string}
         */
        insert : 'insert',
        /**
         * The Delete key.
         * @type {string}
         */
        delete : 'delete',
        /**
         * The Home key.
         * @type {string}
         */
        home : 'home',
        /**
         * The End key.
         * @type {string}
         */
        end : 'end',
        /**
         * The Page Up key.
         * @type {string}
         */
        pageUp : 'pageUp',
        /**
         * The Page Down key.
         * @type {string}
         */
        pageDown : 'pageDown',
        /**
         * The Add key.
         * @type {string}
         */
        add : 'add',
        /**
         * The Subtract key.
         * @type {string}
         */
        subtract : 'subtract',
        /**
         * The Multiply key.
         * @type {string}
         */
        multiply : 'multiply',
        /**
         * The Divide key.
         * @type {string}
         */
        divide : 'divide',
        /**
         * The Decimal key.
         * @type {string}
         */
        decimal : 'decimal',
        /**
         * The Enter key.
         * @type {string}
         */
        enter : 'enter',
        /**
         /// The Num 0 key.
         * @type {string}
         */
        num0 : 'num0',
        /**
         /// The Num 1 key.
         * @type {string}
         */
        num1 : 'num1',
        /**
         /// The Num 2 key.
         * @type {string}
         */
        num2 : 'num2',
        /**
         /// The Num 3 key.
         * @type {string}
         */
        num3 : 'num3',
        /**
         /// The Num 4 key.
         * @type {string}
         */
        num4 : 'num4',
        /**
         /// The Num 5 key.
         * @type {string}
         */
        num5 : 'num5',
        /**
         /// The Num 6 key.
         * @type {string}
         */
        num6 : 'num6',
        /**
         /// The Num 7 key.
         * @type {string}
         */
        num7 : 'num7',
        /**
         /// The Num 8 key.
         * @type {string}
         */
        num8 : 'num8',
        /**
         /// The Num 9 key.
         * @type {string}
         */
        num9 : 'num9',
        /**
         /// The CapsLock key.
         * @type {string}
         */
        capslock : 'capslock',
        /**
         /// The ScrollLock key.
         * @type {string}
         */
        scrolllock : 'scrolllock',
        /**
         /// The NumLock key.
         * @type {string}
         */
        numlock : 'numlock'
    },

    /**
     * @param key
     * @returns {*}
     * @ignore
     */
   /*jshint eqnull:true */
    _convert: function(key) {
        if (key == null)
            return key;

        var keyValue = this._convertToKey[key.toLowerCase()];
        if (keyValue == null)
            throw new Error("Key value is illegal, value = " + key);

        return keyValue;
    },

    /*jshint eqnull:true */
    /**
     * Presses the specified key using a keyboard virtual key.
     * @param {Keyboard.Keys} key The keyboard scan code of the key.
     * @returns {Promise<void>} a promise that is fulfilled after pressing the specified key.
     */
    pressKey: function(key) {
        if (key == null)
            throw new Error("key parameter must be supplied");

        var func = function(){
            return this._executeUtilityCommand("ExecuteDeviceReplayCommand", "PressKey", this._convert(key), "EnumKeyValue");
        };
        var options = { sender: this, onError: true, calleeArguments: arguments, type: "Keyboard"};
        return this.notifyWithEvents(func, arguments, options);
    },

    /*jshint eqnull:true */
    /**
     * Presses and holds the specified key using a keyboard virtual key.
     * @param {Keyboard.Keys} @param key The keyboard code of the key to hold.
     * @returns {Promise<void>} a promise that is fulfilled after pressing and holding the specified key.
     */
    keyDown: function(key) {
        if (key == null)
            throw new Error("key parameter must be supplied");

        var func = function(){
            return this._executeUtilityCommand("ExecuteDeviceReplayCommand", "KeyDown", this._convert(key), "EnumKeyValue");
        };
        var options = { sender: this, onError: true, calleeArguments: arguments, type: "Keyboard"};
        return this.notifyWithEvents(func, arguments, options);
    },

    /*jshint eqnull:true */
    /**
     * Releases the specified key based on its keyboard virtual key.
     * @param {Keyboard.Keys} key The keyboard code of the key to release.
     * @returns {Promise<void>} a promise that is fulfilled after releasing the specified key.
     */
    keyUp: function(key) {
        if (key == null)
            throw new Error("key parameter must be supplied");

        var func = function(){
            return this._executeUtilityCommand("ExecuteDeviceReplayCommand", "KeyUp", this._convert(key), "EnumKeyValue");
        };
        var options = { sender: this, onError: true, calleeArguments: arguments, type: "Keyboard"};
        return this.notifyWithEvents(func, arguments, options);
    },

    /*jshint eqnull:true */
    /**
     * Types the specified string.
     * @param {string} stringToSend The string to type.
     * @returns {Promise<void>} a promise that is fulfilled after typing the specified string.
     */
    sendString: function(stringToSend) {
        if (stringToSend == null)
            throw new Error("stringToSend parameter must be supplied");

        var func = function(){
            return this._executeUtilityCommand("ExecuteDeviceReplayCommand", "SendString", stringToSend);
        };
        var options = { sender: this, onError: true, calleeArguments: arguments, type: "Keyboard"};
        return this.notifyWithEvents(func, arguments, options);
    }
};

module.exports.Keyboard = Keyboard;

