// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..

/*
 * Created on 13/12/2015.
 */
var Logger = require("./logger.js").Logger;

var logger = new Logger("ReplayErrors");
var StringUtils = require("./object_utils.js").StringUtils;

var ReplayErrorsBehavior = {
    /*jshint eqnull:true */
    /**
     * Handles the errors that are returned from the runtime engine.
     * The method should be used in the rejected of the promise.
     * @param {Object} error The exception object, in case the error is returned from the runtime a field of statusCode should be included.
     * @private
     */
    handleReplayError: function(error){
        //is it our error?
        var statusCode = error.statusCode;
        if(statusCode == null || (!this._replayErrors[statusCode.toString()]) || error._handled){
            throw error;
        }

        var errorMessage = this._replayErrors[statusCode.toString()] + ": ";

        if(!StringUtils.isNullOrWhiteSpace(error.message))
            errorMessage += error.message.replace(/^GeneralServerErrorException: /, "");

        logger.info("replay error occurred: " + errorMessage);

        error.message = errorMessage;
        //TODO: this is a workaround since the same exception is received here several times
        error._handled = true;
        throw error;
    },


    /**
     * This is the mapping between the status code to the type of the exception.
     */
    _replayErrors: {
        "-111": "ReplayObjectNotFoundException",
        "-112": "ReplayObjectNotUniqueException",
        "-113": "ReplayParentMissingException",
        "-114": "ReplayObjectNotVisibleException",
        "-115": "ReplayObjectDisabledException",
        "-116": "ReplayItemNotFoundException",
        "-117": "ReplayItemNotUniqueException",
        "-118": "ReplayTimeoutException",
        "-120": "ReplayArgumentOutOfRangeException",
        "-105": "ObjectCookieNotFoundException",
        "-110": "GeneralReplayException",
        "-400": "OutOfRangeException",
        "-401": "NoConnectionException",
        "-402": "ErrorFieldProtectedException",
        "-403": "TextTooLongException",
        "-404": "RuleNotFoundException",
        "-405": "IllegalOperationException",
        "-406": "ItemNotFoundException",
        "-407": "HllapiNotFoundException",
        "-408": "UndefinedKeyCombinationException",
        "-409": "HllapiOperationNotSupportedException",
        "-500": "MobileReplayException",
        "-501": "MobileReplayException",
        "-502": "MobileReplayException",
        "-503": "MobileReplayException",
        "-504": "MobileReplayException",
        "-505": "MobileReplayException",
        "-506": "MobileReplayException",
        "-507": "MobileReplayException",
        "-508": "MobileReplayException",
        "-509": "MobileReplayException",
        "-510": "MobileReplayException",
        "-511": "MobileReplayException",
        "-512": "MobileReplayException",
        "-513": "MobileReplayException",
        "-514": "MobileReplayException"
    }
};

module.exports = ReplayErrorsBehavior;