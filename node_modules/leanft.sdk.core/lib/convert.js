// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
// Created on 26/11/2015.
// @type {{toString: Function, toNumber: Function, toBool: Function, toStringProperty: Function}}

/**
 * Converts a value to the expected type, throws an Error if not possible.
  *
  * @class
  * @ignore
 */
var Convert = {
	/**
	* Converts value to String.
	* @function
	*/
    toString: function(value) {
        var type = typeof value;
        if (type === 'string')
            return value;

        if(type === 'number' || type === 'boolean') {
            return value.toString();
        }

        throw new Error("value is not a string");
    },

 	/**
	* Converts value to number.
	* @function
    * @ignore
	*/
   toNumber: function(value) {
        if(typeof value === 'number') {
            return value;
        }

        if(typeof value === 'string') {
            if(Convert._isNumericStr(value)) {
                return parseFloat(value);
            }
        }

        throw new Error("value is not numeric");
    },

 	/**
	* Converts value to Boolean.
	* @function
    * @ignore
	*/
   toBool: function(value) {
        if(typeof value === 'boolean') {
            return value;
        }

        if(typeof value === 'string') {
            value = value.toLowerCase();
            if(value === 'true')
                return true;
            if(value === 'false')
                return false;
        }

        throw new Error("value is not a Boolean");
    },

	/**
	* Converts value to string property.
	* @function
    * @ignore
	*/
    toStringProperty: function(value) {
        if(value instanceof RegExp) {
            return value;
        }

        return Convert.toString(value);
    },

    _isNumericStr: function(value) {
        return !isNaN(value);
    },

    /**
	* Converts value to Date.
	* @function
    * @ignore
	*/
    toDate: function (value) {
        if (value instanceof Date) {
            return value;
        }

        if (typeof value === 'string') {
            var date = new Date(value);
            if(date == "Invalid Date")
                throw new Error("the value is not in correct format");
            return date;
        }

        throw new Error("the value is not Date or a string");
    }
};

module.exports.Convert = Convert;