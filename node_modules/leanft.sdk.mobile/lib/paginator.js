// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/22/2015.
 */

var ObjUtils = require("leanft.sdk.core").ObjectUtils;
var UiObjectBase = require("./uiobject_base").UiObjectBaseTestObject;
var UiObjectBaseDesc = require("./uiobject_base").UiObjectBaseDescription;
var Convert = require("leanft.sdk.core").Convert;

/**
 * The description of a Paginator test object in a mobile application.
 * @param {Object} [props] Initializes the description using the supplied property bag.
 * @returns {Paginator} the description object that was initialized.
 * @constructor
 * @memberof Mobile
 * @extends Mobile.UiObjectBaseDescription
 */
function Paginator(props) {
    var paginatorDes = new UiObjectBaseDesc("Paginator");

    paginatorDes._defineByPropertyBag(props);

    return paginatorDes;
}

/**
 * A page control in a mobile application. (iOS Only)
 * @class PaginatorTO
 * @memberof Mobile
 * @constructor
 * @extends Mobile.UiObjectBaseTestObject
 * @mixes Mobile.PaginatorTOBehavior._methods
 */
function PaginatorTO(session, description) {
    description = description || Paginator();
    var paginatorTO = new UiObjectBase("MobilePager", session, description);

    paginatorTO._mergeBehavior(PaginatorTOBehavior);

    return paginatorTO;
}

//Consts
var setWiredName = "Set";

/**
 * @memberof Mobile
 * @ignore
 */
var PaginatorTOBehavior = {
    /**
     * @ignore
     * @memberof Mobile.PaginatorTOBehavior
     */
    _methods: {
        /*jshint eqnull:true */
        /**
         * Brings the specified page into view.
         * @function
         * @param {number} pageIndex The numeric index of the page to display.
         * @returns {Promise<void>} a promise that is fulfilled when the requested page is brought into view.
         */
        set: {
            wiredName: setWiredName,
            exec: function (pageIndex) {
                if (pageIndex == null)
                    throw new Error("You must pass the requested page index to set() method");

                return this._executeWithEvents(arguments, setWiredName, Convert.toNumber(pageIndex));
            }
        }
    }
};

module.exports.Paginator = Paginator;
module.exports.PaginatorTO = PaginatorTO;

