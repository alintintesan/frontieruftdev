// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created  on 12/21/2015.
 */

var ObjUtils = require("leanft.sdk.core").ObjectUtils;
var UiObjectBase = require("./uiobject_base").UiObjectBaseTestObject;
var UiObjectBaseDesc = require("./uiobject_base").UiObjectBaseDescription;

/**
 * The description of a Calendar test object in a mobile application.
 * @param {Object} [props] Initializes the description using the supplied property bag.
 * @returns {Calendar} the description object that was initialized.
 * @constructor
 * @memberof Mobile
 * @extends Mobile.UiObjectBaseDescription
 */
function Calendar(props) {
    var calendarDes = new UiObjectBaseDesc("Calendar");

    calendarDes._defineByPropertyBag(props);

    return calendarDes;
}

/**
 * A calendar object in a mobile application.
 * @class CalendarTO
 * @memberof Mobile
 * @constructor
 * @extends Mobile.UiObjectBaseTestObject
 * @mixes Mobile.CalendarTOBehavior._methods
 */
function CalendarTO(session, description) {
    description = description || Calendar();
    var calendarTO = new UiObjectBase("MobileCalendar", session, description);

    calendarTO._mergeBehavior(CalendarTOBehavior);

    return calendarTO;
}

//Consts
var setValueWiredName = "Set";

/**
 * @ignore
 * @memberof Mobile
 */
var CalendarTOBehavior = {
    /**
     * @ignore
     * @memberof Mobile.CalendarTOBehavior
     */
    _methods: {
        /*jshint eqnull:true */
        /**
         * Sets the specified time/date in the calendar.
         * @function
         * @param {string} value The value to set in the calendar. Possible values: a specific time, a specific date, or both, for example: "01-10-2016"
         * @param {string} format The format of the value argument. Example: "mm-DD-yyyy"
         * @returns {Promise<void>} a promise that is fulfilled after the requested date is set.
         */
        setValue: {
            wiredName: setValueWiredName,
            exec: function (value, format) {
                if (value == null || format == null)
                    throw new Error("You must pass value and format to setValue method");

                return this._executeWithEvents(arguments, setValueWiredName, value, format);
            }
        }
    }
};

module.exports.Calendar = Calendar;
module.exports.CalendarTO = CalendarTO;