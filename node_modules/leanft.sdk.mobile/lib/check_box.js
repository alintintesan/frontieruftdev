// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/20/2015.
 */

var Convert = require("leanft.sdk.core").Convert;
var UiObjectBase = require("./uiobject_base").UiObjectBaseTestObject;
var UiObjectBaseDesc = require("./uiobject_base").UiObjectBaseDescription;

/**
 * The description of a Calendar test object in a mobile application.
 * @param {Object} [props] Initializes the description using the supplied property bag.
 * @returns {CheckBox} the description object that was initialized.
 * @constructor
 * @memberof Mobile
 * @extends Mobile.UiObjectBaseDescription
 */
function CheckBox(props) {
    var checkBoxDes = new UiObjectBaseDesc("CheckBox");

    checkBoxDes._defineByPropertyBag(props);

    return checkBoxDes;
}

/**
 * A check box object in a mobile application. (Android only)
 * @class CheckBoxTO
 * @memberof Mobile
 * @constructor
 * @extends Mobile.UiObjectBaseTestObject
 * @mixes Mobile.CheckBoxTOBehavior._methods
 */
function CheckBoxTO(session, description) {
    description = description || CheckBox();
    var checkBoxTO = new UiObjectBase("MobileCheckbox", session, description);

    checkBoxTO._mergeBehavior(CheckBoxTOBehavior);

    return checkBoxTO;
}

//Consts
var setWiredName = "Set";

/**
 * @memberof Mobile
 * @ignore
 */
var CheckBoxTOBehavior = {
    /**
     * @ignore
     * @memberof Mobile.CheckBoxTOBehavior
     */
    _methods: {
        /*jshint eqnull:true */
        /**
         * Sets the state of the check box.
         * @function
         * @param {boolean} state Indicates whether this check box will be checked.
         * @returns {Promise<void>} a promise that is fulfilled after the checkbox is set.
         */
        set: {
            wiredName: setWiredName,
            exec: function (state) { // bool
                if (state == null)
                    throw new Error("You must pass state to set() method");

                state = Convert.toBool(state);
                state = state ? "on" : "off";

                return this._executeWithEvents(arguments, setWiredName, state);
            }
        }
    }
};

module.exports.CheckBox = CheckBox;
module.exports.CheckBoxTO = CheckBoxTO;
