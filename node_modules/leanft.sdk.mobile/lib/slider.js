// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/22/2015.
 */

var ObjUtils = require("leanft.sdk.core").ObjectUtils;
var UiObjectBase = require("./uiobject_base").UiObjectBaseTestObject;
var UiObjectBaseDesc = require("./uiobject_base").UiObjectBaseDescription;
var Convert = require("leanft.sdk.core").Convert;

/**
 * The description of a Slider test object in a mobile application.
 * @param {Object} [props] Initializes the description using the supplied property bag.
 * @returns {Slider} the description object that was initialized.
 * @constructor
 * @memberof Mobile
 * @extends Mobile.UiObjectBaseDescription
 */
function Slider(props) {
    var sliderDes = new UiObjectBaseDesc("Slider");

    sliderDes._defineByPropertyBag(props);

    return sliderDes;
}

/**
 * A slider object in a mobile application.
 * @class SliderTO
 * @memberof Mobile
 * @constructor
 * @extends Mobile.UiObjectBaseTestObject
 * @mixes Mobile.SliderTOBehavior._methods
 */
function SliderTO(session, description) {
    description = description || Slider();
    var sliderTO = new UiObjectBase("MobileSlider", session, description);

    sliderTO._mergeBehavior(SliderTOBehavior);

    return sliderTO;
}

//Consts
var setPositionWiredName = "SetPosition";

/**
 * @memberof Mobile
 * @ignore
 */
var SliderTOBehavior = {
    /**
     * @ignore
     * @memberof Mobile.SliderTOBehavior
     */
    _methods: {
        /*jshint eqnull:true */
        /**
         * Sets the slider position.
         * @function
         * @param {number} position The new position for the slider. Possible values are determined by the range of the slider.
         * @returns {Promise<void>} a promise that is fulfilled after the new position of the slider is set.
         */
        setPosition: {
            wiredName: setPositionWiredName,
            exec: function (position) {
                if (position == null)
                    throw new Error("You must pass the requested position to setPosition() method");

                return this._executeWithEvents(arguments, setPositionWiredName, Convert.toNumber(position));
            }
        }
    }
};

module.exports.Slider = Slider;
module.exports.SliderTO = SliderTO;


