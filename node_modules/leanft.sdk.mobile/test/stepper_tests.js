// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/22/2015.
 */

var assert = require("assert");
var sinon = require("sinon");
var StepperTO = require("../lib/stepper.js").StepperTO;

describe("StepperTOTestObject",function() {
    var stepperTOUnderTest;
    beforeEach(function () {
        stepperTOUnderTest = new StepperTO();
        sinon.stub(stepperTOUnderTest, "_executeCommand");
    });

    describe("up", function() {
        it("should call the _executeCommand method and pass it the correct parameters", function () {
            stepperTOUnderTest.up();
            assert(stepperTOUnderTest._executeCommand.calledOnce);
            assert.deepEqual(stepperTOUnderTest._executeCommand.firstCall.args.slice(0,1), ["Up"]);
        });
        it("should return the same promise that was returned from _executeCommand", function () {
            var getROPromise = {};
            stepperTOUnderTest._executeCommand.returns(getROPromise);
            var res = stepperTOUnderTest.up();
            assert.strictEqual(res, getROPromise);
        });
    });

    describe("down", function() {
        it("should call the _executeCommand method and pass it the correct parameters", function () {
            stepperTOUnderTest.down();
            assert(stepperTOUnderTest._executeCommand.calledOnce);
            assert.deepEqual(stepperTOUnderTest._executeCommand.firstCall.args.slice(0,1), ["Down"]);
        });
        it("should return the same promise that was returned from _executeCommand", function () {
            var getROPromise = {};
            stepperTOUnderTest._executeCommand.returns(getROPromise);
            var res = stepperTOUnderTest.down();
            assert.strictEqual(res, getROPromise);
        });
    });

});



