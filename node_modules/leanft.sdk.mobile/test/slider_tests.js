// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/22/2015.
 */

var assert = require("assert");
var sinon = require("sinon");
var SliderTO = require("../lib/slider.js").SliderTO;

describe("SliderTestObject",function() {
    var sliderUnderTest;
    beforeEach(function () {
        sliderUnderTest = new SliderTO();
        sinon.stub(sliderUnderTest, "_executeCommand");
    });

    describe("setPosition", function() {
        it("should throw error if no arguments passed", function(){
            assert.throws(function(){
                sliderUnderTest.setPosition();
            });
        });
        it("should throw error if null passed", function(){
            assert.throws(function(){
                sliderUnderTest.setPosition(null);
            });
        });
        it("should throw error if not numeric value passed", function(){
            assert.throws(function(){
                sliderUnderTest.setPosition("20a");
            });
        });
        it("should call the _executeCommand method and pass it the correct parameters when number passed", function () {
            sliderUnderTest.setPosition(20.2);
            assert(sliderUnderTest._executeCommand.calledOnce);
            assert.deepEqual(sliderUnderTest._executeCommand.firstCall.args.slice(0,2), ["SetPosition", 20.2]);
        });
        it("should call the _executeCommand method and pass it the correct parameters when numeric string passed", function () {
            sliderUnderTest.setPosition("20.2");
            assert(sliderUnderTest._executeCommand.calledOnce);
            assert.deepEqual(sliderUnderTest._executeCommand.firstCall.args.slice(0,2), ["SetPosition", "20.2"]);
        });
        it("should return the same promise that was returned from _executeCommand", function () {
            var getROPromise = {};
            sliderUnderTest._executeCommand.returns(getROPromise);
            var res = sliderUnderTest.setPosition(20);
            assert.strictEqual(res, getROPromise);
        });
    });

});



