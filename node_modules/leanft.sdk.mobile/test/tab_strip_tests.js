// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/24/2015.
 */

var assert = require("assert");
var sinon = require("sinon");
var TabStripTO = require("../lib/tab_strip.js").TabStripTO;

describe("TabStripTO",function() {
    var tabStripTOUnderTest;
    beforeEach(function () {
        tabStripTOUnderTest = new TabStripTO();
        sinon.stub(tabStripTOUnderTest, "_executeCommand");
    });

    describe("select", function () {
        it("should throw error if no arguments passed", function () {
            assert.throws(function () {
                tabStripTOUnderTest.select();
            });
        });
        it("should throw error if null passed", function () {
            assert.throws(function () {
                tabStripTOUnderTest.select(null);
            });
        });
        it("should call the _executeCommand and pass it the correct arguments when number passed", function () {
            tabStripTOUnderTest.select(2);
            assert(tabStripTOUnderTest._executeCommand.calledOnce);
            assert.deepEqual(tabStripTOUnderTest._executeCommand.firstCall.args.slice(0,2), ["Select", 2]);
        });
        it("should call the _executeCommand and pass it the correct arguments when string passed", function () {
            tabStripTOUnderTest.select("tab strip name");
            assert(tabStripTOUnderTest._executeCommand.calledOnce);
            assert.deepEqual(tabStripTOUnderTest._executeCommand.firstCall.args.slice(0,2), ["Select", "tab strip name"]);
        });
        it("should return the same promise that was returned from _executeCommand", function () {
            var getROPromise = {};
            tabStripTOUnderTest._executeCommand.returns(getROPromise);
            var res = tabStripTOUnderTest.select(2);
            assert.strictEqual(res, getROPromise);
        });
    });
});