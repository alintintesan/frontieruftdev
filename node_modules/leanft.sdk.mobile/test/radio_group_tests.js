// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 12/22/2015.
 */

var assert = require("assert");
var sinon = require("sinon");
var RadioGroupTO = require("../lib/radio_group.js").RadioGroupTO;

describe("RadioGroupTOTestObject",function() {
    var radioGroupTOUnderTest;

    beforeEach(function () {
        radioGroupTOUnderTest = new RadioGroupTO();
        sinon.stub(radioGroupTOUnderTest, "_executeCommand");
    });

    describe("select", function() {
        it("should throw error if no arguments passed", function(){
            assert.throws(function(){
                radioGroupTOUnderTest.select();
            });
        });
        it("should throw error if null passed", function(){
            assert.throws(function(){
                radioGroupTOUnderTest.select(null);
            });
        });
        it("should call the _executeCommand method and pass it the correct parameters when index passed", function () {
            radioGroupTOUnderTest.select(1);
            assert(radioGroupTOUnderTest._executeCommand.calledOnce);
            assert.deepEqual(radioGroupTOUnderTest._executeCommand.firstCall.args.slice(0,2), ["Select", 1]);
        });
        it("should call the _executeCommand method and pass it the correct parameters when name passed", function () {
            radioGroupTOUnderTest.select("item name");
            assert(radioGroupTOUnderTest._executeCommand.calledOnce);
            assert.deepEqual(radioGroupTOUnderTest._executeCommand.firstCall.args.slice(0,2), ["Select", "item name"]);
        });

    });

});



