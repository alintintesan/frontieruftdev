// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 8/13/2016.
 */

var Core = require("leanft.sdk.core");
var UiObjectBase = require("./ui_object_base.js");
var UiObjectBaseTO = UiObjectBase.UiObjectBaseTO;
var UiObjectBaseDescription = UiObjectBase.UiObjectBaseDescription;
var ObjUtils = Core.ObjectUtils;

/**
 * LinkDescriptionBehavior - the description for a Java Link object
 * @memberof Java
 * @ignore
 */
var LinkDescriptionBehavior = {
    /**
     * The text displayed in the link object.
     * @param {string} [text] When provided, this method acts as a setter and sets the text value.
     * @returns {string | Description} If no parameter is provided, the method acts as a getter and returns the current stored text value;
     * otherwise it returns 'this' for use with the builder pattern.
     * @memberof Java.Link#
     */
    text: function (text) {
        return this._simplePropertyHandler("value", text);
    }
};

/**
 * The description of a Java Link test object.
 * @param {Object} [props] Initializes a Java Link test object using the supplied property bag.
 * @returns {Link} the description object that was initialized.
 * @class Link
 * @extends Java.UiObjectBaseDescription
 * @mixes Java.LinkDescriptionBehavior
 * @memberof Java
 */
function Link(props) {
    var linkDesc = new UiObjectBaseDescription("Link");
    ObjUtils.extend(linkDesc, LinkDescriptionBehavior);
    linkDesc._defineByPropertyBag(props);
    return linkDesc;
}

/**
 * The behaviors of Link object
 * @memberof Java
 * @ignore
 */
var LinkTOBehavior = {
    /**
     * @ignore
     * @memberof Java.LinkTOBehavior
     */
    _properties: {
        /**
         * The text displayed in the link object.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the text displayed in the link object.
         * @memberof Java.LinkTO#
         */
        text: {
            wiredName: "value"
        }
    },

    /**
     * @ignore
     * @memberof Java.LinkTOBehavior
     */
    _methods: {
        /*jshint unused:true, eqnull:true */
        /**
         * Clicks the specified link.
         * @function
         * @param {string} linkName The full text of the link item to click
         * @returns {Promise<void>} a promise that is fulfilled when the clickLink operation ends.
         * @memberof Java.LinkTO#
         */
        clickLink: function (linkName) {
            if (linkName == null)
                throw new Error("ArgumentException: linkName is required.");
            return this._executeWithEvents(arguments, "ClickLink", linkName);
        }
    }
};

/**
 * A Java Link test object
 * @constructor
 * @class LinkTO
 * @extends Java.UiObjectBaseTO
 * @mixes Java.LinkTOBehavior._methods
 * @mixes Java.LinkTOBehavior._properties
 * @memberof Java
 */
function LinkTO(session, description) {
    description = description || Link();
    var linkTO = new UiObjectBaseTO("JavaLink", session, description);
    linkTO._mergeBehavior(LinkTOBehavior);
    return linkTO;
}

module.exports.Link = Link;
module.exports.LinkTO = LinkTO;