// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 9/6/2016.
 */

var Core = require("leanft.sdk.core");
var ObjUtils = Core.ObjectUtils;
var UiObjectBase = require("./ui_object_base.js");
var UiObjectBaseTO = UiObjectBase.UiObjectBaseTO;
var UiObjectBaseDescription = UiObjectBase.UiObjectBaseDescription;

/**
 * LabelDescriptionBehavior - the description for a Java Label object
 * @memberof Java
 * @ignore
 */
var LabelDescriptionBehavior = {
    /**
     * The object's text.
     * @param {string} [text] When provided, this method acts as a setter and sets the text value.
     * @returns {string | Description} If no parameter is provided, the method acts as a getter and returns the current stored text value;
     * otherwise it returns 'this' for use with the builder pattern.
     * @memberof Java.Label#
     */
    text: function (text) {
        return this._simplePropertyHandler("text", text);
    }
};

/**
 * The description of a Java Label test object.
 * @param {Object} [props] Initializes a Java Label test object using the supplied property bag.
 * @returns {Label} the description object that was initialized.
 * @class Label
 * @extends Java.UiObjectBaseDescription
 * @mixes Java.LabelDescriptionBehavior
 * @memberof Java
 */
function Label(props) {
    var labelDesc = new UiObjectBaseDescription("Label");
    ObjUtils.extend(labelDesc, LabelDescriptionBehavior);
    labelDesc._defineByPropertyBag(props);
    return labelDesc;
}

/**
 * The behavior of the Label object
 * @memberof Java
 * @ignore
 */
var LabelTOBehavior = {
    /**
     * @ignore
     * @memberof WPF.ButtonTOBehavior
     */
    _properties: {
        /**
         * The text associated with the object.
         * @function
         * @returns {Promise<string>} a promise that is fulfilled with the text associated with the object.
         * @memberof Java.LabelTO#
         */
        text: {

        }
    }
};

/**
 * A Java Label test object
 * @constructor
 * @class LabelTO
 * @extends Java.UiObjectBaseTO
 * @mixes Java.LabelTOBehavior._properties
 * @memberof Java
 */
function LabelTO(session, description) {
    description = description || Label();
    var labelTO = new UiObjectBaseTO("JavaStaticText", session, description);
    labelTO._mergeBehavior(LabelTOBehavior);
    return labelTO;
}

module.exports.Label = Label;
module.exports.LabelTO = LabelTO;
