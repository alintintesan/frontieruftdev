// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
var LFTCore = require("leanft.sdk.core");
var Logger = LFTCore.Logger;

function ExternalLabReportSender(session, labName) {
    this._session = session;
    this._labName = labName;
    this._logger = new Logger("ExternalLabReportSender("+labName+")");
}

ExternalLabReportSender.prototype = {
    _session: null,
    _labName: null,
    _logger: null,

    sendReportEvent: function (reportContext, messageData) {
        return this._session._communication._notify("ReportToExternal", {
            labName: this._labName,
            reportContext: reportContext,
            data: messageData
        });
    },

    sendCloseReportEvent: function (reportContext, messageData) {
        return this._session._communication._notify("ReportCloseToExternal", {
            labName: this._labName,
            reportContext: reportContext,
            data: messageData
        });
    },

    createReportContextForId: function (idToCreateContextFor) {
        return this._session._communication._send("CreateReportContext", {
            labName: this._labName,
            testObject: idToCreateContextFor
        }).then(function (result) {
            if(result && result.reportContext) {
                return result.reportContext;
            }
            return null;
        }).catch(function (err) {
            this._logger.error("createReportContextForId, failure: " + err);
            return null;
        }.bind(this));
    },

    closeReportContext: function (reportContext) {
        return this._session._communication._notify("CloseReportContext", {
            labName: this._labName,
            reportContext: reportContext
        });
    }
};

module.exports.ExternalLabReportSender = ExternalLabReportSender;