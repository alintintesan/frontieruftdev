var assert = require("assert");
var LFT = require("../../leanft");
var SDK = LFT.SDK;
var Web = LFT.Web;

var expect = require("../../leanft/expect");

var browserTypeToTest = Web.BrowserType.Firefox;

var browser;

jasmine.DEFAULT_TIMEOUT_INTERVAL = 120 * 1000;

xdescribe("new Test", function () {

    beforeAll(function (done) {
        LFT.init().then(function () {
            LFT.Reporter.startScreenRecording().then(function () {
                Web.Browser.launch(browserTypeToTest).then(function (b) {
                    browser = b;
                    browser.navigate("http://demo.borland.com").then(function (res) { });
                });
            });
        }).catch(function(e) {
            console.log("ERROR: " + e);
            assert.fail("not expected");
        });
        LFT.whenDone(done);
    });

    beforeEach(function (done) {
        LFT.beforeTest();
        LFT.whenDone(done);
    });

    it("Test screen recording start/stop in before all", function (done) {
        browser.$(Web.Link({
            innerText: "Test Sites",
            tagName: "A"
        })).click();
        LFT.whenDone(done);
    });

    afterEach(function (done) {
        LFT.afterTest();
        if (browser) {
            //browser.close();
            LFT.Reporter.stopScreenRecording();
        }

        LFT.whenDone(done);
    });

    afterAll(function (done) {
        LFT.cleanup();
        LFT.whenDone(done);
    });


    function sleep(ms) {
        var time_ms = new Date().getTime();
        while (new Date().getTime() < time_ms + ms) { }
    }
});





