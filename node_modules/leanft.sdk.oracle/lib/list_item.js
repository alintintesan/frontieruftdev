// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 09/18/2018.
 */

var Core = require("leanft.sdk.core");
var Utils = Core.ObjectUtils;
var MergeBehavior = Core.MergeBehavior;

/**
 * A List Item object
 * @class ListItem
 * @mixes Oracle.ListItemBehavior._properties
 * @memberof Oracle
 */
function ListItem(ownerList, identifier) {
    Utils.extend(this, MergeBehavior);
    this._mergeBehavior(ListItemBehavior);
    this._ownerList = ownerList;
    this._identifier = identifier;
    this._executeWithEventsOnItemOnError = this._ownerList._executeWithEventsOnItemOnError.bind(this._ownerList, this);
}

ListItem.prototype = {
    _ownerList: null,
    _identifier: null,
    _executeWithEventsOnItemOnError: null
};

/**
 * The methods of ListItem object
 * @memberof Oracle
 * @ignore
 */
var ListItemBehavior = {
    _helpers: {
        /**
         * Returns the identifier of the item.
         * @returns {number|string} the identifier of the item.
         * @ignore
         */
        _getIdentifier: function () {
            return this._identifier;
        },

        /**
         * Returns the text representation of the item.
         * @returns {string} the text representation of the item.
         * @ignore
         */
        _getTextRepresentation: function () {
            return this._identifier;
        }
    },

    /**
     * @memberof Oracle.ListItemBehavior
     * @ignore
     */
    _properties: {
        /**
         * Indicates whether the specified item is selected.
         * @function
         * @returns {Promise<boolean>} a promise fulfilled with the indication whether the item is selected or not.
         */
        isSelected: function () {
            return this._executeWithEventsOnItemOnError(this._ownerList._isItemSelected, this._identifier);
        }
    }
};

module.exports.ListItem = ListItem;
