// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 09/18/2018.
 */

/**
 * The class to implement sendkey action.
 * @memberof Oracle
 * @ignore
 */
var SendKeyBehaviorOracle = {
    /**
     * @memberof Oracle.SendKeyBehaviorOracle
     * @ignore
     */
    _methods: {
        /*jshint unused:true, eqnull:true */
        /**
         * Invokes the specified Oracle softkey.
         * @function
         * @param {Oracle.SoftKeys} key The softkey function to perform. Use {@link Oracle.SoftKeys} for special keys.
         * @returns {Promise<void>} a promise that is fulfilled when the sendKeys operation ends.
         */
        sendKey: function (key) {
            if (key == null || !this._isKeySupported(key))
                throw new Error("You must supply a valid softkey");

            return this._executeWithEvents(arguments, "InvokeSoftkey", key);
        }
    },
    _helpers: {
        _isKeySupported: function (suspectString) {
            return (suspectString in KeyToNativeConsts);
        }
    }
};

/**
 * Oracle softkeys.
 * @typedef {Oracle.SoftKeys} SoftKeys
 * @property {string} nextField next field key.
 * @property {string} previousField previous field key.
 * @property {string} clearField clear field key.
 * @property {string} up up key.
 * @property {string} down down key.
 * @property {string} scrollUp scroll up key.
 * @property {string} scrollDown scroll down key.
 * @property {string} edit edit key.
 * @property {string} return return key.
 * @property {string} listOfValues list of values key.
 * @property {string} help help key.
 * @property {string} exit exit key.
 * @property {string} showKeys show keys key
 * @property {string} commit commit key.
 * @property {string} nextPrimaryKey next primary key.
 * @property {string} clearRecord clear record key.
 * @property {string} deleteRecord delete record key.
 * @property {string} duplicateRecord duplicate record key.
 * @property {string} insertRecord insert record key.
 * @property {string} nextSetOfRecords next set of records key.
 * @property {string} nextRecord next record key.
 * @property {string} previousRecord previous record.
 * @property {string} clearBlock clear block key.
 * @property {string} blockMenu block menu key.
 * @property {string} nextBlock next block key.
 * @property {string} previousBlock previous block key.
 * @property {string} duplicateField duplicate field key.
 * @property {string} clearForm clear form key.
 * @property {string} enterQuery enter query key.
 * @property {string} executeQuery execute query key.
 * @property {string} displayError display error key.
 * @property {string} print print key.
 * @property {string} countQuery count query key
 * @property {string} updateRecord update record key.
 * @property {string} f0 f0 key.
 * @property {string} f1 f1 key.
 * @property {string} f2 f2 key.
 * @property {string} f3 f3 key.
 * @property {string} f4 f4 key.
 * @property {string} f5 f5 key.
 * @property {string} f6 f6 key.
 * @property {string} f7 f7 key.
 * @property {string} f8 f8 key.
 * @property {string} f9 f9 key.
 * @property {string} listTabPages list tab pages key.
 * @memberof Oracle
 */
var SoftKeys = {
    /**
     * nextField key.
     * @type {string}
     */
    nextField: "NEXT FIELD",
    /**
     * previousField key.
     * @type {string}
     */
    previousField: "PREVIOUS FIELD",
    /**
     * clearField key.
     * @type {string}
     */
    clearField: "CLEAR FIELD",
    /**
     * up key.
     * @type {string}
     */
    up: "UP",
    /**
     * down key.
     * @type {string}
     */
    down: "DOWN",
    /**
     * scrollUp key.
     * @type {string}
     */
    scrollUp: "SCROLL UP",
    /**
     * scrollDown key.
     * @type {string}
     */
    scrollDown: "SCROLL DOWN",
    /**
     * edit key.
     * @type {string}
     */
    edit: "EDIT",
    /**
     * return key.
     * @type {string}
     */
    return: "RETURN",
    /**
     * listOfValues key.
     * @type {string}
     */
    listOfValues: "LIST OF VALUES",
    /**
     * help key.
     * @type {string}
     */
    help: "HELP",
    /**
     * exit key.
     * @type {string}
     */
    exit: "EXIT",
    /**
     * showKeys key.
     * @type {string}
     */
    showKeys: "SHOW KEYS",
    /**
     * commit key.
     * @type {string}
     */
    commit: "COMMIT",
    /**
     * nextPrimaryKey key.
     * @type {string}
     */
    nextPrimaryKey: "NEXT PRIMARY KEY",
    /**
     * clearRecord key.
     * @type {string}
     */
    clearRecord: "CLEAR RECORD",
    /**
     * deleteRecord key.
     * @type {string}
     */
    deleteRecord: "DELETE RECORD",
    /**
     * duplicateRecord key.
     * @type {string}
     */
    duplicateRecord: "DUPLICATE RECORD",
    /**
     * insertRecord key.
     * @type {string}
     */
    insertRecord: "INSERT RECORD",
    /**
     * nextSetOfRecords key.
     * @type {string}
     */
    nextSetOfRecords: "NEXT SET OF RECORDS",
    /**
     * nextRecord key.
     * @type {string}
     */
    nextRecord: "NEXT RECORD",
    /**
     * previousRecord key.
     * @type {string}
     */
    previousRecord: "PREVIOUS RECORD",
    /**
     * clearBlock key.
     * @type {string}
     */
    clearBlock: "CLEAR BLOCK",
    /**
     * blockMenu key.
     * @type {string}
     */
    blockMenu: "BLOCK MENU",
    /**
     * nextBlock key.
     * @type {string}
     */
    nextBlock: "NEXT BLOCK",
    /**
     * previousBlock key.
     * @type {string}
     */
    previousBlock: "PREVIOUS BLOCK",
    /**
     * duplicateField key.
     * @type {string}
     */
    duplicateField: "DUPLICATE FIELD",
    /**
     * clearForm key.
     * @type {string}
     */
    clearForm: "CLEAR FORM",
    /**
     * enterQuery key.
     * @type {string}
     */
    enterQuery: "ENTER QUERY",
    /**
     * executeQuery key.
     * @type {string}
     */
    executeQuery: "EXECUTE QUERY",
    /**
     * displayError key.
     * @type {string}
     */
    displayError: "DISPLAY ERROR",
    /**
     * print key.
     * @type {string}
     */
    print: "PRINT",
    /**
     * countQuery key.
     * @type {string}
     */
    countQuery: "COUNT QUERY",
    /**
     * updateRecord key.
     * @type {string}
     */
    updateRecord: "UPDATE RECORD",
    /**
     * f0 key.
     * @type {string}
     */
    f0: "FUNCTION 0",
    /**
     * f1 key.
     * @type {string}
     */
    f1: "FUNCTION 1",
    /**
     * f2 key.
     * @type {string}
     */
    f2: "FUNCTION 2",
    /**
     * f3 key.
     * @type {string}
     */
    f3: "FUNCTION 3",
    /**
     * f4 key.
     * @type {string}
     */
    f4: "FUNCTION 4",
    /**
     * f5 key.
     * @type {string}
     */
    f5: "FUNCTION 5",
    /**
     * f6 key.
     * @type {string}
     */
    f6: "FUNCTION 6",
    /**
     * f7 key.
     * @type {string}
     */
    f7: "FUNCTION 7",
    /**
     * f8 key.
     * @type {string}
     */
    f8: "FUNCTION 8",
    /**
     * f9 key.
     * @type {string}
     */
    f9: "FUNCTION 9",
    /**
     * listTabPages key.
     * @type {string}
     */
    listTabPages: "LIST TAB PAGES"
};

var KeyToNativeConsts = {
};
KeyToNativeConsts[SoftKeys.nextField] = "NEXT FIELD";
KeyToNativeConsts[SoftKeys.previousField] = "PREVIOUS FIELD";
KeyToNativeConsts[SoftKeys.clearField] = "CLEAR FIELD";
KeyToNativeConsts[SoftKeys.up] = "UP";
KeyToNativeConsts[SoftKeys.down] = "DOWN";
KeyToNativeConsts[SoftKeys.scrollUp] = "SCROLL UP";
KeyToNativeConsts[SoftKeys.scrollDown] = "SCROLL DOWN";
KeyToNativeConsts[SoftKeys.edit] = "EDIT";
KeyToNativeConsts[SoftKeys.return] = "RETURN";
KeyToNativeConsts[SoftKeys.listOfValues] = "LIST OF VALUES";
KeyToNativeConsts[SoftKeys.help] = "HELP";
KeyToNativeConsts[SoftKeys.exit] = "EXIT";
KeyToNativeConsts[SoftKeys.showKeys] = "SHOW KEYS";
KeyToNativeConsts[SoftKeys.commit] = "COMMIT";
KeyToNativeConsts[SoftKeys.nextPrimaryKey] = "NEXT PRIMARY KEY";
KeyToNativeConsts[SoftKeys.clearRecord] = "CLEAR RECORD";
KeyToNativeConsts[SoftKeys.deleteRecord] = "DELETE RECORD";
KeyToNativeConsts[SoftKeys.duplicateRecord] = "DUPLICATE RECORD";
KeyToNativeConsts[SoftKeys.insertRecord] = "INSERT RECORD";
KeyToNativeConsts[SoftKeys.nextSetOfRecords] = "NEXT SET OF RECORDS";
KeyToNativeConsts[SoftKeys.nextRecord] = "NEXT RECORD";
KeyToNativeConsts[SoftKeys.previousRecord] = "PREVIOUS RECORD";
KeyToNativeConsts[SoftKeys.clearBlock] = "CLEAR BLOCK";
KeyToNativeConsts[SoftKeys.blockMenu] = "BLOCK MENU";
KeyToNativeConsts[SoftKeys.nextBlock] = "NEXT BLOCK";
KeyToNativeConsts[SoftKeys.previousBlock] = "PREVIOUS BLOCK";
KeyToNativeConsts[SoftKeys.duplicateField] = "DUPLICATE FIELD";
KeyToNativeConsts[SoftKeys.clearForm] = "CLEAR FORM";
KeyToNativeConsts[SoftKeys.enterQuery] = "ENTER QUERY";
KeyToNativeConsts[SoftKeys.executeQuery] = "EXECUTE QUERY";
KeyToNativeConsts[SoftKeys.displayError] = "DISPLAY ERROR";
KeyToNativeConsts[SoftKeys.print] = "PRINT";
KeyToNativeConsts[SoftKeys.countQuery] = "COUNT QUERY";
KeyToNativeConsts[SoftKeys.updateRecord] = "UPDATE RECORD";

KeyToNativeConsts[SoftKeys.f0] = "FUNCTION 0";
KeyToNativeConsts[SoftKeys.f1] = "FUNCTION 1";
KeyToNativeConsts[SoftKeys.f2] = "FUNCTION 2";
KeyToNativeConsts[SoftKeys.f3] = "FUNCTION 3";
KeyToNativeConsts[SoftKeys.f4] = "FUNCTION 4";
KeyToNativeConsts[SoftKeys.f5] = "FUNCTION 5";
KeyToNativeConsts[SoftKeys.f6] = "FUNCTION 6";
KeyToNativeConsts[SoftKeys.f7] = "FUNCTION 7";
KeyToNativeConsts[SoftKeys.f8] = "FUNCTION 8";
KeyToNativeConsts[SoftKeys.f9] = "FUNCTION 9";

KeyToNativeConsts[SoftKeys.listTabPages] = "LIST TAB PAGES";

module.exports.SendKeyBehaviorOracle = SendKeyBehaviorOracle;
module.exports.SoftKeys = SoftKeys;