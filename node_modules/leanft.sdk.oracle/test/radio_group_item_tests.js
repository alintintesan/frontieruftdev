// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 09/18/2018.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Radio Group Item", function () {

    var RadioGroupItem = require("../lib/radio_group_item.js").RadioGroupItem;
    var radioGroupItemUnderTest;
    var owner;

    beforeEach(function () {
        owner = { owner: "Owner", _executeWithEventsOnItemOnError: sinon.stub() };
        radioGroupItemUnderTest = new RadioGroupItem(owner, "identifier");
        radioGroupItemUnderTest._executeWithEventsOnItemOnError = sinon.stub();
    });

    afterEach(function () {
        delete radioGroupItemUnderTest._executeWithEventsOnItemOnError;
        delete owner._executeWithEventsOnItemOnError;
    });


    describe("Constructor", function () {
        it("should assign correct values", function () {
            assert.strictEqual(radioGroupItemUnderTest._ownerRadioGroup, owner);
            assert.strictEqual(radioGroupItemUnderTest._identifier, "identifier");
        });
    });

    describe("_getIdentifier method", function () {
        it("should return correct values", function () {
            var res = radioGroupItemUnderTest._getIdentifier();
            assert.strictEqual(res, "identifier");
        });
    });

    describe("_getTextRepresentation method", function () {
        it("should return correct values", function () {
            var res = radioGroupItemUnderTest._getTextRepresentation();
            assert.strictEqual(res, "identifier");
        });
    });

    describe("isSelected method", function () {
        it("should execute _isItemSelected with correct parameter", function () {
            radioGroupItemUnderTest._ownerRadioGroup._isItemSelected = sinon.stub();
            radioGroupItemUnderTest.isSelected();
            sinon.assert.calledOnce(radioGroupItemUnderTest._executeWithEventsOnItemOnError);
            sinon.assert.calledWith(radioGroupItemUnderTest._executeWithEventsOnItemOnError, radioGroupItemUnderTest._ownerRadioGroup._isItemSelected, "identifier");
        });

        it("should return bool if _isItemSelected returns bool", function () {
            radioGroupItemUnderTest._executeWithEventsOnItemOnError = sinon.stub().returns(true);
            var res = radioGroupItemUnderTest.isSelected();
            assert.strictEqual(res, true);
        });
    });
});
