// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 08/25/2016.
 */

var assert = require("assert");
var sinon = require("sinon");
var Core = require("leanft.sdk.core");
var Position = Core.Position;
var MouseButton = Core.MouseButton;

describe("List Item", function () {

    var ListItem = require("../lib/list_item.js").ListItem;
    var listItemUnderTest;
    var owner;

    beforeEach(function () {
        owner = { owner: "Owner", _executeWithEventsOnItem: sinon.stub(), _executeWithEventsOnItemOnError: sinon.stub() };
        listItemUnderTest = new ListItem(owner, 10, "TextRepresentation");
        listItemUnderTest._executeWithEventsOnItem = sinon.stub();
        listItemUnderTest._executeWithEventsOnItemOnError = sinon.stub();
    });

    afterEach(function () {
        delete listItemUnderTest._executeWithEventsOnItem;
        delete listItemUnderTest._executeWithEventsOnItemOnError;
        delete owner._executeWithEventsOnItem;
        delete owner._executeWithEventsOnItemOnError;
    });


    describe("Constructor", function () {
        it("should assign correct values", function () {
            assert.strictEqual(listItemUnderTest._ownerListBox, owner);
            assert.strictEqual(listItemUnderTest._identifier, 10);
            assert.strictEqual(listItemUnderTest._textRepresentation, "TextRepresentation");
        });
    });
});