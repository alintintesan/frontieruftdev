// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 09/22/2016.
 */

var Core = require("leanft.sdk.core");
var ObjectUtils = Core.ObjectUtils;
var MergeBehavior = Core.MergeBehavior;

/**
 * A StatusBarItem object
 * @constructor
 * @class StatusBarItem
 * @mixes StdWin.StatusBarItemBehavior._properties
 * @mixes StdWin.StatusBarItemBehavior._methods
 * @memberof StdWin
 */
function StatusBarItem(ownerStatusBar, identifier, textRepresentation) {
    ObjectUtils.extend(this, MergeBehavior);
    this._mergeBehavior(StatusBarItemBehavior);
    this._ownerStatusBar = ownerStatusBar;
    this._identifier = identifier;
    this._textRepresentation = textRepresentation;
    this._executeWithEventsOnItemOnError = this._ownerStatusBar._executeWithEventsOnItemOnError.bind(this._ownerStatusBar, this);
}

/**
 * The methods of StatusBarItemBehavior object
 * @memberof StdWin
 * @ignore
 */
var StatusBarItemBehavior = {
    _helpers: {
        _ownerStatusBar: null,
        _identifier: null,
        _textRepresentation: null,
        _executeWithEventsOnItemOnError: null,

        /**
         * Gets the identifier of the item.
         * @returns {number|string} the identifier of the item.
         * @ignore
         */
        _getIdentifier: function () {
            return this._identifier;
        },

        /**
         * Gets the text representation of the item.
         * @returns {string} the text representation of the item.
         * @ignore
         */
        _getTextRepresentation: function () {
            return this._textRepresentation;
        }
    },

    /**
     * @memberof StdWin.StatusBarItemBehavior
     * @ignore
     */
    _properties: {
        /**
         * Gets the text of the status bar item.
         * @function
         * @returns {Promise<string>} a promise fulfilled with the text of the status bar item.
         */
        text: function () {
            return this._executeWithEventsOnItemOnError(this._ownerStatusBar._getItemText, this._identifier);
        },

        /**
         * Gets the width of the status bar item.
         * @function
         * @returns {Promise<number>} a promise fulfilled with the height of the status bar item.
         */
        width: function () {
            return this._executeWithEventsOnItemOnError(this._ownerStatusBar._getItemWidth, this._identifier);
        },

        /**
         * Gets the height of the status bar item.
         * @function
         * @returns {Promise<number>} a promise fulfilled with the height of the status bar item.
         */
        height: function () {
            return this._executeWithEventsOnItemOnError(this._ownerStatusBar._getItemHeight, this._identifier);
        },

        /**
         * Gets the x-coordinate of the status bar item.
         * @function
         * @returns {Promise<number>} a promise fulfilled with the x-coordinate of the status bar item.
         */
        x: function () {
            return this._executeWithEventsOnItemOnError(this._ownerStatusBar._getItemX, this._identifier);
        },

        /**
         * Gets the y-coordinate of the status bar item.
         * @function
         * @returns {Promise<number>} a promise fulfilled with the y-coordinate of the status bar item.
         */
        y: function () {
            return this._executeWithEventsOnItemOnError(this._ownerStatusBar._getItemY, this._identifier);
        }
    }
};

module.exports.StatusBarItem = StatusBarItem;
