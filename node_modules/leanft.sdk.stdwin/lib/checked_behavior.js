// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 06/17/2016.
 */

var Core = require("leanft.sdk.core");
var CheckedState = Core.CheckedState;

/**
 * CheckedStateDescriptionBehavior
 * @memberof StdWin
 * @ignore
 */
var CheckedStateDescriptionBehavior = {
    /**
     * The state of the checked control.
     * @param {CheckedState} [state] When provided, this method acts as a setter and sets the state value.
     * @returns {CheckedState | Description} If no parameter is provided, the method acts as a getter and returns the current stored state value;
     * otherwise it returns 'this' for use with the builder pattern.
     * @ignore
     */
    _state: function (state) {
        return this._propertyHandler("checked", state, CheckedState._checkedStateToNative, CheckedState._nativeToCheckedState);
    }
};

/**
 * The behaviors of the checked object
 * @memberof StdWin
 * @ignore
 */
var CheckedStateTOBehavior = {
    _checkedWiredName: "checked",
    _helpers: {
        /**
         * Get the state of the checked control.
         * @returns {Promise<CheckedState>} a promise that is fulfilled with the state of the checked control.
         * @ignore
         */
        _state: function () {
            return this._getROProperty(CheckedStateTOBehavior._checkedWiredName, arguments.callee.caller.arguments).then(CheckedState._nativeToCheckedState);
        }
    }
};

module.exports.CheckedStateDescriptionBehavior = CheckedStateDescriptionBehavior;
module.exports.CheckedStateTOBehavior = CheckedStateTOBehavior;
