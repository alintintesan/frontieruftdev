// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("TitleBar Tests", function () {

    describe("TitleBar Description", function () {
        var TitleBar = require("../lib/title_bar").TitleBar;
        var titleBarDescriptionUnderTest;

        beforeEach(function () {
            titleBarDescriptionUnderTest = TitleBar();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'TitleBar' LeanFT type", function () {
                titleBarDescriptionUnderTest = new TitleBar();
                assert.deepEqual(titleBarDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "TitleBar"
                });
            });
        });
    });

    describe("TitleBar Test Object", function () {
        var TitleBarTO = require("../lib/title_bar").TitleBarTO;
        var titleBarTestObjectUnderTest;

        beforeEach(function () {
            titleBarTestObjectUnderTest = new TitleBarTO();
            sinon.stub(titleBarTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                titleBarTestObjectUnderTest.name();
                sinon.assert.calledOnce(titleBarTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(titleBarTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                titleBarTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = titleBarTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});