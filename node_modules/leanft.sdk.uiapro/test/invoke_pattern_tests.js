// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("InvokePattern Test", function () {
    var InvokePattern = require("../lib/patterns/invoke_pattern.js").InvokePattern;
    var name = "InvokePattern";
    var invokePatternUnderTest;
    var ownerMock;
    var promiseMock = { then: function (cb) { return cb();} };

    beforeEach(function () {
        ownerMock = {
            _executeCommand: sinon.stub(),
            notifyWithEvents: sinon.stub()
        };
        invokePatternUnderTest = new InvokePattern(ownerMock);
    });

    describe("invoke method", function () {
        it("should execute command 'Invoke'", function () {
            ownerMock._executeCommand.returns(promiseMock);
            invokePatternUnderTest.invoke();
            sinon.assert.calledOnce(ownerMock._executeCommand);
            sinon.assert.calledWith(ownerMock._executeCommand, name);
        });
    });
});