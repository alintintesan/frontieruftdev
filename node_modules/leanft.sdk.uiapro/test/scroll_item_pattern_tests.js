// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");
 
describe("ScrollItemPattern Test", function () {
    var ScrollItemPattern = require("../lib/patterns/scroll_item_pattern.js").ScrollItemPattern;
    var name = "ScrollItemPattern";
    var scrollItemPatternUnderTest;
    var ownerMock;
    var promiseMock = { then: function (cb) { return cb; } };

    beforeEach(function () {
        ownerMock = {
            _executeCommand: sinon.stub()
        };
        scrollItemPatternUnderTest = new ScrollItemPattern(ownerMock);
    });

    describe("scrollIntoView method", function () {
        it("should execute command 'ScrollIntoView'", function () {
            ownerMock._executeCommand.returns(promiseMock);
            scrollItemPatternUnderTest.scrollIntoView();
            sinon.assert.calledOnce(ownerMock._executeCommand);
            sinon.assert.calledWith(ownerMock._executeCommand, name);
        });
    });
});