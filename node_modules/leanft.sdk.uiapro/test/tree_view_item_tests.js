// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("TreeViewItem Tests", function () {

    describe("TreeViewItem Description", function () {
        var TreeViewItem = require("../lib/tree_view_item").TreeViewItem;
        var treeViewItemDescriptionUnderTest;

        beforeEach(function () {
            treeViewItemDescriptionUnderTest = TreeViewItem();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'TreeViewItem' LeanFT type", function () {
                treeViewItemDescriptionUnderTest = new TreeViewItem();
                assert.deepEqual(treeViewItemDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "TreeViewItem"
                });
            });
        });
    });

    describe("TreeViewItem Test Object", function () {
        var TreeViewItemTO = require("../lib/tree_view_item").TreeViewItemTO;
        var treeViewItemTestObjectUnderTest;

        beforeEach(function () {
            treeViewItemTestObjectUnderTest = new TreeViewItemTO();
            sinon.stub(treeViewItemTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                treeViewItemTestObjectUnderTest.name();
                sinon.assert.calledOnce(treeViewItemTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(treeViewItemTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                treeViewItemTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = treeViewItemTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});