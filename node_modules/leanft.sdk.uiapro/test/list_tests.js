// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("List Tests", function () {

    describe("List Description", function () {

        var List = require("../lib/list.js").List;
        var listDescriptionUnderTest;

        beforeEach(function () {
            listDescriptionUnderTest = new List();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and LeanFT type", function () {
                listDescriptionUnderTest = new List();
                assert.deepEqual(listDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "List"
                });
            });
        });
    });

    describe("List Test Object", function () {

        var ListTO = require("../lib/list.js").ListTO;
        var listTOUnderTest;

        beforeEach(function () {
            listTOUnderTest = new ListTO();
            sinon.stub(listTOUnderTest, "_getROProperty");
            sinon.stub(listTOUnderTest, "_executeWithEvents");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                listTOUnderTest.name();
                sinon.assert.calledOnce(listTOUnderTest._getROProperty);
                sinon.assert.calledWith(listTOUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                listTOUnderTest._getROProperty.returns(promiseMock);
                var res = listTOUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});