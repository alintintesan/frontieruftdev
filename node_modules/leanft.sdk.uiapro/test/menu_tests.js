// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Menu Tests", function () {

    describe("Menu Description", function () {

        var Menu = require("../lib/menu.js").Menu;
        var menuDescriptionUnderTest;

        beforeEach(function () {
            menuDescriptionUnderTest = new Menu();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and LeanFT type", function () {
                menuDescriptionUnderTest = new Menu();
                assert.deepEqual(menuDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Menu"
                });
            });
        });
    });

    describe("Menu Test Object", function () {

        var MenuTO = require("../lib/menu.js").MenuTO;
        var menuTOUnderTest;

        beforeEach(function () {
            menuTOUnderTest = new MenuTO();
            sinon.stub(menuTOUnderTest, "_getROProperty");
            sinon.stub(menuTOUnderTest, "_executeWithEventsWithOptions");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                menuTOUnderTest.name();
                sinon.assert.calledOnce(menuTOUnderTest._getROProperty);
                sinon.assert.calledWith(menuTOUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                menuTOUnderTest._getROProperty.returns(promiseMock);
                var res = menuTOUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});