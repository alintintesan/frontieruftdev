// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("MenuBar Tests", function () {

    describe("MenuBar Description", function () {
        var MenuBar = require("../lib/menu_bar").MenuBar;
        var menuBarDescriptionUnderTest;

        beforeEach(function () {
            menuBarDescriptionUnderTest = MenuBar();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'MenuBar' LeanFT type", function () {
                menuBarDescriptionUnderTest = new MenuBar();
                assert.deepEqual(menuBarDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "MenuBar"
                });
            });
        });
    });

    describe("MenuBar Test Object", function () {
        var MenuBarTO = require("../lib/menu_bar").MenuBarTO;
        var menuBarTestObjectUnderTest;

        beforeEach(function () {
            menuBarTestObjectUnderTest = new MenuBarTO();
            sinon.stub(menuBarTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                menuBarTestObjectUnderTest.name();
                sinon.assert.calledOnce(menuBarTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(menuBarTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                menuBarTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = menuBarTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});