// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("SplitButton Tests", function () {

    describe("SplitButton Description", function () {
        var SplitButton = require("../lib/split_button").SplitButton;
        var splitButtonDescriptionUnderTest;

        beforeEach(function () {
            splitButtonDescriptionUnderTest = SplitButton();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'SplitButton' LeanFT type", function () {
                splitButtonDescriptionUnderTest = new SplitButton();
                assert.deepEqual(splitButtonDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "SplitButton"
                });
            });
        });
    });

    describe("SplitButton Test Object", function () {
        var SplitButtonTO = require("../lib/split_button").SplitButtonTO;
        var splitButtonTestObjectUnderTest;

        beforeEach(function () {
            splitButtonTestObjectUnderTest = new SplitButtonTO();
            sinon.stub(splitButtonTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                splitButtonTestObjectUnderTest.name();
                sinon.assert.calledOnce(splitButtonTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(splitButtonTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                splitButtonTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = splitButtonTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});