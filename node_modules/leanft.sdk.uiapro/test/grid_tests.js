// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Grid Tests", function () {

    describe("Grid Description", function () {
        var Grid = require("../lib/grid").Grid;
        var gridDescriptionUnderTest;

        beforeEach(function () {
            gridDescriptionUnderTest = Grid();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Grid' LeanFT type", function () {
                gridDescriptionUnderTest = new Grid();
                assert.deepEqual(gridDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Grid"
                });
            });
        });
    });

    describe("Grid Test Object", function () {
        var GridTO = require("../lib/grid").GridTO;
        var gridTestObjectUnderTest;

        beforeEach(function () {
            gridTestObjectUnderTest = new GridTO();
            sinon.stub(gridTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                gridTestObjectUnderTest.name();
                sinon.assert.calledOnce(gridTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(gridTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                gridTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = gridTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});