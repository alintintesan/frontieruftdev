// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Text Tests", function () {

    describe("Text Description", function () {
        var Text = require("../lib/text").Text;
        var textDescriptionUnderTest;

        beforeEach(function () {
            textDescriptionUnderTest = Text();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Text' LeanFT type", function () {
                textDescriptionUnderTest = new Text();
                assert.deepEqual(textDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Text"
                });
            });
        });
    });

    describe("Text Test Object", function () {
        var TextTO = require("../lib/text").TextTO;
        var textTestObjectUnderTest;

        beforeEach(function () {
            textTestObjectUnderTest = new TextTO();
            sinon.stub(textTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                textTestObjectUnderTest.name();
                sinon.assert.calledOnce(textTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(textTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                textTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = textTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});