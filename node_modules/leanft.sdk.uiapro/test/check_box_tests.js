// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("CheckBox Tests", function () {

    describe("CheckBox Description", function () {
        var CheckBox = require("../lib/check_box").CheckBox;
        var checkBoxDescriptionUnderTest;

        beforeEach(function () {
            checkBoxDescriptionUnderTest = CheckBox();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'CheckBox' LeanFT type", function () {
                checkBoxDescriptionUnderTest = new CheckBox();
                assert.deepEqual(checkBoxDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "CheckBox"
                });
            });
        });
    });

    describe("CheckBox Test Object", function () {
        var CheckBoxTO = require("../lib/check_box").CheckBoxTO;
        var checkBoxTestObjectUnderTest;

        beforeEach(function () {
            checkBoxTestObjectUnderTest = new CheckBoxTO();
            sinon.stub(checkBoxTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                checkBoxTestObjectUnderTest.name();
                sinon.assert.calledOnce(checkBoxTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(checkBoxTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                checkBoxTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = checkBoxTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});