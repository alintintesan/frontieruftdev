// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("GridItemPattern Test", function () {
    var GridItemPattern = require("../lib/patterns/grid_item_pattern.js").GridItemPattern;
    var name = "GridItemPattern";
    var gridItemPatternUnderTest;
    var ownerMock;
    var promiseMock = { then: function (cb) { return cb(); } };

    beforeEach(function () {
        ownerMock = {
            _executeCommand: sinon.stub(),
            notifyWithEvents: sinon.stub()
        };
        gridItemPatternUnderTest = new GridItemPattern(ownerMock);
    });

    describe("getColumnIndex method", function () {
        it("should execute _executeCommand 'GetColumnIndex'", function () {
            ownerMock._executeCommand.returns(promiseMock);
            gridItemPatternUnderTest.getColumnIndex();
            sinon.assert.calledOnce(ownerMock._executeCommand);
            sinon.assert.calledWith(ownerMock._executeCommand, name);
        });
    });

    describe("getRowIndex method", function () {
        it("should execute _executeCommand 'GetRowIndex'", function () {
            ownerMock._executeCommand.returns(promiseMock);
            gridItemPatternUnderTest.getRowIndex();
            sinon.assert.calledOnce(ownerMock._executeCommand);
            sinon.assert.calledWith(ownerMock._executeCommand, name);
        });
    });

    describe("getSpannedRows method", function () {
        it("should execute _executeCommand 'GetSpannedRows'", function () {
            ownerMock._executeCommand.returns(promiseMock);
            gridItemPatternUnderTest.getSpannedRows();
            sinon.assert.calledOnce(ownerMock._executeCommand);
            sinon.assert.calledWith(ownerMock._executeCommand, name);
        });
    });

    describe("getSpannedColumns method", function () {
        it("should execute _executeCommand 'GetSpannedColumns'", function () {
            ownerMock._executeCommand.returns(promiseMock);
            gridItemPatternUnderTest.getSpannedColumns();
            sinon.assert.calledOnce(ownerMock._executeCommand);
            sinon.assert.calledWith(ownerMock._executeCommand, name);
        });
    });

    describe("getContainingGrid method", function () {
        it("should execute _executeCommand 'GetContainingGrid'", function () {
            ownerMock._executeCommand.returns(promiseMock);
            gridItemPatternUnderTest.getContainingGrid();
            sinon.assert.calledOnce(ownerMock._executeCommand);
            sinon.assert.calledWith(ownerMock._executeCommand, name);
        });
    });
});