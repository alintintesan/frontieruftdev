// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Group Tests", function () {

    describe("Group Description", function () {
        var Group = require("../lib/group").Group;
        var groupDescriptionUnderTest;

        beforeEach(function () {
            groupDescriptionUnderTest = Group();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Group' LeanFT type", function () {
                groupDescriptionUnderTest = new Group();
                assert.deepEqual(groupDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Group"
                });
            });
        });
    });

    describe("Group Test Object", function () {
        var GroupTO = require("../lib/group").GroupTO;
        var groupTestObjectUnderTest;

        beforeEach(function () {
            groupTestObjectUnderTest = new GroupTO();
            sinon.stub(groupTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                groupTestObjectUnderTest.name();
                sinon.assert.calledOnce(groupTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(groupTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                groupTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = groupTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});