// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Edit Tests", function () {

    describe("Edit Description", function () {
        var Edit = require("../lib/edit").Edit;
        var editDescriptionUnderTest;

        beforeEach(function () {
            editDescriptionUnderTest = Edit();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Edit' LeanFT type", function () {
                editDescriptionUnderTest = new Edit();
                assert.deepEqual(editDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Edit"
                });
            });
        });
    });

    describe("Edit Test Object", function () {
        var EditTO = require("../lib/edit").EditTO;
        var editTestObjectUnderTest;

        beforeEach(function () {
            editTestObjectUnderTest = new EditTO();
            sinon.stub(editTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                editTestObjectUnderTest.name();
                sinon.assert.calledOnce(editTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(editTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                editTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = editTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});