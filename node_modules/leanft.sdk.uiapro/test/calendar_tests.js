// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Calendar Tests", function () {

    describe("Calendar Description", function () {
        var Calendar = require("../lib/calendar.js").Calendar;
        var calendarDescriptionUnderTest;

        beforeEach(function () {
            calendarDescriptionUnderTest = Calendar();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Calendar' LeanFT type", function () {
                calendarDescriptionUnderTest = new Calendar();
                assert.deepEqual(calendarDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Calendar"
                });
            });
        });
    });

    describe("Calendar Test Object", function () {
        var CalendarTO = require("../lib/calendar.js").CalendarTO;
        var calendarTestObjectUnderTest;

        beforeEach(function () {
            calendarTestObjectUnderTest = new CalendarTO();
            sinon.stub(calendarTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                calendarTestObjectUnderTest.name();
                sinon.assert.calledOnce(calendarTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(calendarTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                calendarTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = calendarTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});