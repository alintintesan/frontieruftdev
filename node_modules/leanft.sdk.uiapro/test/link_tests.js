// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Link Tests", function () {

    describe("Link Description", function () {
        var Link = require("../lib/link").Link;
        var linkDescriptionUnderTest;

        beforeEach(function () {
            linkDescriptionUnderTest = Link();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Link' LeanFT type", function () {
                linkDescriptionUnderTest = new Link();
                assert.deepEqual(linkDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Link"
                });
            });
        });
    });

    describe("Link Test Object", function () {
        var LinkTO = require("../lib/link").LinkTO;
        var linkTestObjectUnderTest;

        beforeEach(function () {
            linkTestObjectUnderTest = new LinkTO();
            sinon.stub(linkTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                linkTestObjectUnderTest.name();
                sinon.assert.calledOnce(linkTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(linkTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                linkTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = linkTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});