// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("TabControl Tests", function () {

    describe("TabControl Description", function () {

        var TabControl = require("../lib/tab_control.js").TabControl;
        var tabControlDescriptionUnderTest;

        beforeEach(function () {
            tabControlDescriptionUnderTest = new TabControl();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and LeanFT type", function () {
                tabControlDescriptionUnderTest = new TabControl();
                assert.deepEqual(tabControlDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "TabControl"
                });
            });
        });
    });

    describe("TabControl Test Object", function () {

        var TabControlTO = require("../lib/tab_control.js").TabControlTO;
        var tabControlTOUnderTest;

        beforeEach(function () {
            tabControlTOUnderTest = new TabControlTO();
            sinon.stub(tabControlTOUnderTest, "_getROProperty");
            sinon.stub(tabControlTOUnderTest, "_executeWithEvents");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                tabControlTOUnderTest.name();
                sinon.assert.calledOnce(tabControlTOUnderTest._getROProperty);
                sinon.assert.calledWith(tabControlTOUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                tabControlTOUnderTest._getROProperty.returns(promiseMock);
                var res = tabControlTOUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});