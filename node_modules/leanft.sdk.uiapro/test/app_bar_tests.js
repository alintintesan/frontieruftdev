// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("AppBar Tests", function () {

    describe("AppBar Description", function () {
        var AppBar = require("../lib/app_bar").AppBar;
        var appBarDescriptionUnderTest;

        beforeEach(function () {
            appBarDescriptionUnderTest = AppBar();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'AppBar' LeanFT type", function () {
                appBarDescriptionUnderTest = new AppBar();
                assert.deepEqual(appBarDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "AppBar"
                });
            });
        });
    });

    describe("AppBar Test Object", function () {
        var AppBarTO = require("../lib/app_bar").AppBarTO;
        var appBarTestObjectUnderTest;

        beforeEach(function () {
            appBarTestObjectUnderTest = new AppBarTO();
            sinon.stub(appBarTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                appBarTestObjectUnderTest.name();
                sinon.assert.calledOnce(appBarTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(appBarTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                appBarTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = appBarTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});