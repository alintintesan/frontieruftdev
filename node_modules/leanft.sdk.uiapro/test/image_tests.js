// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Image Tests", function () {

    describe("Image Description", function () {
        var Image = require("../lib/image").Image;
        var imageDescriptionUnderTest;

        beforeEach(function () {
            imageDescriptionUnderTest = Image();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Image' LeanFT type", function () {
                imageDescriptionUnderTest = new Image();
                assert.deepEqual(imageDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Image"
                });
            });
        });
    });

    describe("Image Test Object", function () {
        var ImageTO = require("../lib/image").ImageTO;
        var imageTestObjectUnderTest;

        beforeEach(function () {
            imageTestObjectUnderTest = new ImageTO();
            sinon.stub(imageTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                imageTestObjectUnderTest.name();
                sinon.assert.calledOnce(imageTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(imageTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                imageTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = imageTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});