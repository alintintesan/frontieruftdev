// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Document Tests", function () {

    describe("Document Description", function () {
        var Document = require("../lib/document").Document;
        var documentDescriptionUnderTest;

        beforeEach(function () {
            documentDescriptionUnderTest = Document();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Document' LeanFT type", function () {
                documentDescriptionUnderTest = new Document();
                assert.deepEqual(documentDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Document"
                });
            });
        });
    });

    describe("Document Test Object", function () {
        var DocumentTO = require("../lib/document").DocumentTO;
        var documentTestObjectUnderTest;

        beforeEach(function () {
            documentTestObjectUnderTest = new DocumentTO();
            sinon.stub(documentTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                documentTestObjectUnderTest.name();
                sinon.assert.calledOnce(documentTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(documentTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                documentTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = documentTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});