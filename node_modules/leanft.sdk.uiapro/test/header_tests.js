// (c) Copyright 2015 - 2023 Micro Focus or one of its affiliates..
/*
 * Created on 11/23/2022.
 */

var assert = require("assert");
var sinon = require("sinon");

describe("Header Tests", function () {

    describe("Header Description", function () {
        var Header = require("../lib/header").Header;
        var headerDescriptionUnderTest;

        beforeEach(function () {
            headerDescriptionUnderTest = Header();
        });

        describe("Constructor", function () {
            it("should assign 'UIAPro' and 'Header' LeanFT type", function () {
                headerDescriptionUnderTest = new Header();
                assert.deepEqual(headerDescriptionUnderTest.leanFTType, {
                    technology: "UIAPro",
                    leanftType: "Header"
                });
            });
        });
    });

    describe("Header Test Object", function () {
        var HeaderTO = require("../lib/header").HeaderTO;
        var headerTestObjectUnderTest;

        beforeEach(function () {
            headerTestObjectUnderTest = new HeaderTO();
            sinon.stub(headerTestObjectUnderTest, "_getROProperty");
        });

        describe("name method", function () {
            it("should execute _getROProperty 'name'", function () {
                headerTestObjectUnderTest.name();
                sinon.assert.calledOnce(headerTestObjectUnderTest._getROProperty);
                sinon.assert.calledWith(headerTestObjectUnderTest._getROProperty, "name", sinon.match({}));
            });

            it("should return promise as is", function () {
                var promiseMock = { then: function (cb) { return cb(); } };
                headerTestObjectUnderTest._getROProperty.returns(promiseMock);
                var res = headerTestObjectUnderTest.name();
                assert.strictEqual(res, promiseMock);
            });
        });
    });
});